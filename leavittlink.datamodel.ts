// ----------------------
// <auto-generated>
//     generated using a custom program
// </auto-generated>
// ----------------------

export interface QuoteRequest {
    Campaign: string | null;
    CampaignId: number;
    CreatedDate: string | null;
    HasBeenFulfilled: boolean;
    LeadType: string | null;
    ReferringUrl: string | null;
    SelectedQuoteId: number | null;
    User: Partial<User> | null;
    UserId: number;
}

export interface IAddress {
    City: string | null;
    County: string | null;
    State: string | null;
    Street1: string | null;
    Street2: string | null;
    Zip: string | null;
}

export interface ChangeStatus extends MsgStatus {
    ActionCode: string | null;
    ChangeDescription: string | null;
}

export interface Coverage {
    CoverageCode: string | null;
    CurrentRetroactiveDate: string | null;
    CurrentTermAmount: Partial<number> | null;
    Deductible: number | null;
    HartfordQuoteResponse: Partial<HartfordQuoteResponse> | null;
    HartfordQuoteResponseId: number;
    Id: number;
    Limit: number | null;
    Name: string | null;
    OptionTypeCode: string | null;
    OptionValue: string | null;
    SubjectInsuranceCode: string | null;
    ValuationCode: string | null;
}

export interface CoverageDescription {
    CoverageCode: string | null;
    Description: string | null;
    Id: number;
}

export interface ExtendedStatus extends MsgStatus {
    ExtendedStatusCode: string | null;
    ExtendedStatusDescription: string | null;
}

export interface HartfordCustomer {
    Id: number;
    OtherIdentifiers: Array<Partial<OtherIdentifier>> | null;
    User: Partial<User> | null;
    UserId: number;
}

export interface HartfordQuestionGroup {
    HartfordQuestionGroupId: number;
    Id: number;
    QuestionGroup: Partial<QuestionGroup> | null;
    SpectrumClasses: Array<Partial<HartfordQuestionGroupToSpectrumClass>> | null;
}

export interface HartfordQuestionAnswer {
    AnswerQuestionCode: string | null;
    Id: number;
    QuestionInputValue: Partial<QuestionInputValue> | null;
}

export interface HartFordQuestion {
    Id: number;
    Question: Partial<Question> | null;
    QuestionCode: string | null;
}

export interface HartfordQuestionGroupToSpectrumClass {
    HartfordQuestionGroup: Partial<HartfordQuestionGroup> | null;
    HartfordQuestionGroupId: number;
    Id: number;
    SpectrumClass: Partial<SpectrumClass> | null;
    SpectrumClassId: number;
}

export interface HartfordQuestionValidator {
    HartfordValidatorId: string | null;
    Id: number;
    ResponseValidator: Partial<ResponseValidator> | null;
}

export interface HartfordQuoteResponse {
    CompaniesQuoteNumber: string | null;
    Coverages: Array<Partial<Coverage>> | null;
    CreatedDate: string;
    EffectiveDate: string;
    ExpirationDate: string;
    FullTermAmt: Partial<number>;
    Id: number;
    MessageErrorCode: string | null;
    MessageStatusCode: string | null;
    MessageStatusDescription: string | null;
    MsgStatuses: Array<Partial<MsgStatus>> | null;
    OriginalPolicyNumber: string | null;
    PaymentOptions: Array<Partial<PaymentOption>> | null;
    PolicyNumber: string | null;
    QuestionnaireResult: Partial<QuestionnaireResult> | null;
    QuestionnaireResultId: number;
    QuoteInfoDescription: string | null;
    QuoteInfoInitialQuoteRequestDt: string | null;
    QuoteInfoInsurerId: string | null;
}

export interface HartfordQuoteXmlRequest {
    Bridged: boolean;
    CreatedDate: string;
    Id: number;
    QuestionnaireResult: Partial<QuestionnaireResult> | null;
    QuestionnaireResultId: number;
    XmlRequest: string | null;
    XmlResponse: string | null;
}

export interface Installment {
    Id: number;
    InstallmentAmount: Partial<number>;
    InstallmentDueDate: string;
    PaymentOption: Partial<PaymentOption> | null;
    PaymentOptionId: number;
}

export interface MsgStatus {
    HartfordQuoteResponse: Partial<HartfordQuoteResponse> | null;
    HartfordQuoteResponseId: number;
    Id: number;
}

export interface OccupancyCode {
    BuildingAge: 'None'|'LessThanThirty'|'EqualOrGreaterThanThirty';
    BuildingOccupancyCode: string | null;
    ClassCode: string | null;
    Id: number;
    NumberOfStories: 'None'|'OneToFour'|'GreaterThanFour'|'FiveToTwelve'|'GreaterThanTwelve';
    OccupancyQuestionInputValueId: number;
    OccupancyTypeCode: string | null;
    OccupancyTypeQuestionInputValueId: number;
    SortOrder: number;
}

export interface OtherIdentifier {
    HartfordCustomer: Partial<HartfordCustomer> | null;
    HartfordCustomerId: number;
    Id: number;
    OtherId: string | null;
    OtherTypeCode: string | null;
}

export interface PaymentOption {
    DayMonthDue: number;
    HartfordQuoteResponse: Partial<HartfordQuoteResponse> | null;
    HartfordQuoteResponseId: number;
    Id: number;
    InstallmentFeeAmount: Partial<number>;
    Installments: Array<Partial<Installment>> | null;
    PaymentPlanCode: number;
}

export interface SpectrumClass {
    ClassCode: number;
    Description: string | null;
    ExposureBaseCode: string | null;
    ExposureBaseName: string | null;
    HartfordQuestionGroups: Array<Partial<HartfordQuestionGroupToSpectrumClass>> | null;
    Id: number;
    IndustryName: string | null;
    MarketGroupCode: string | null;
    MarketGroupName: string | null;
    SpectrumProgramName: string | null;
    SpecturmProgramCode: string | null;
}

export interface DocumentPath {
    Id: number;
    Path: string | null;
    PathType: 'Xpath'|'Javascript';
    Question: Partial<Question> | null;
    QuestionId: number | null;
    QuestionInputValue: Partial<QuestionInputValue> | null;
    QuestionInputValueId: number | null;
}

export interface ResponseValidatorActionToQuestionInputValue {
    Id: number;
    QuestionInputValue: Partial<QuestionInputValue> | null;
    QuestionInputValueId: number;
    ResponseValidatorAction: Partial<ResponseValidatorAction> | null;
    ResponseValidatorActionId: number;
}

export interface CollectionQuestion extends Question {
    MaxInstance: number;
    Questions: Array<Partial<Question>> | null;
}

export interface Question {
    Answers: Array<Partial<Answer>> | null;
    DocumentPaths: Array<Partial<DocumentPath>> | null;
    EndDate: string | null;
    FriendlyHelperText: string | null;
    FriendlyQuestionText: string | null;
    HartFordQuestion: Partial<HartFordQuestion> | null;
    HelperText: string | null;
    Hidden: boolean;
    Id: number;
    IsExpired: boolean;
    IsRequired: boolean;
    MaxLength: number;
    ParentCollectionQuestion: Partial<CollectionQuestion> | null;
    ParentCollectionQuestionId: number | null;
    QuestionFlowAugmentorActions: Array<Partial<QuestionFlowAugmentorAction>> | null;
    QuestionGroup: Partial<QuestionGroup> | null;
    QuestionGroupId: number;
    QuestionText: string | null;
    ResponseValidators: Array<Partial<ResponseValidator>> | null;
    Sequence: Partial<number>;
    SourceIdentifier: string | null;
    StartDate: string;
}

export interface FlowAugmentor {
    Actions: Array<Partial<FlowAugmentorAction>> | null;
    EndDate: string | null;
    Id: number;
    IsExpired: boolean;
    Predicate: string | null;
    PredicateType: 'XpathExpression'|'Regex'|'Numeric'|'NonNegative'|'Integer';
    Question: Partial<StandardQuestion> | null;
    QuestionId: number;
    StartDate: string;
}

export interface QuestionGroup {
    EndDate: string | null;
    FriendlyName: string | null;
    HartfordQuestionGroup: Partial<HartfordQuestionGroup> | null;
    Id: number;
    IsExpired: boolean;
    IsRequired: boolean;
    Name: string | null;
    QuestionFlowAugmentorActions: Array<Partial<QuestionFlowAugmentorAction>> | null;
    QuestionGroupCovType: 'LiabilityOnly'|'OCP'|'PropertyOnly'|'PropertyandLiability';
    QuestionGroupDriverType: 'Class'|'LOB'|'OptionalCvg';
    QuestionGroupFlowAugmentorActions: Array<Partial<QuestionGroupFlowAugmentorAction>> | null;
    QuestionGroupType: 'HartfordEligibility'|'HartfordLocation'|'HartfordPolicy'|'HartfordAccord';
    QuestionnaireGroup: Partial<QuestionnaireGroup> | null;
    QuestionnaireGroupId: number | null;
    Questions: Array<Partial<Question>> | null;
    SourceIdentifier: string | null;
    StartDate: string;
}

export interface QuestionInputValue {
    Answer: string | null;
    DisplayAnswer: string | null;
    DocumentPaths: Array<Partial<DocumentPath>> | null;
    EndDate: string | null;
    FriendlyDisplayAnswer: string | null;
    FriendlyHelpText: string | null;
    HartfordQuestionAnswer: Partial<HartfordQuestionAnswer> | null;
    HelpText: string | null;
    Id: number;
    IsExpired: boolean;
    Question: Partial<StandardQuestion> | null;
    QuestionId: number;
    ResponseValidatorActionToQuestionInputValues: Array<Partial<ResponseValidatorActionToQuestionInputValue>> | null;
    Sequence: Partial<number>;
    StartDate: string;
}

export interface Questionnaire {
    Id: number;
    Name: string | null;
    QuestionnaireGroups: Array<Partial<QuestionnaireGroup>> | null;
    QuestionnaireResults: Array<Partial<QuestionnaireResult>> | null;
    SourceIdentifier: string | null;
}

export interface QuestionnaireGroup {
    FriendlyName: string | null;
    Id: number;
    Name: string | null;
    QuestionGroupFlowAugmentorActions: Array<Partial<QuestionGroupFlowAugmentorAction>> | null;
    QuestionGroups: Array<Partial<QuestionGroup>> | null;
    Questionnaire: Partial<Questionnaire> | null;
    QuestionnaireId: number;
    Sequence: Partial<number>;
    SourceIdentifier: string | null;
}

export interface ResponseValidator {
    Actions: Array<Partial<ResponseValidatorAction>> | null;
    EndDate: string | null;
    HartfordQuestionValidator: Partial<HartfordQuestionValidator> | null;
    Id: number;
    IsExpired: boolean;
    Predicate: string | null;
    PredicateType: 'XpathExpression'|'Regex'|'Numeric'|'NonNegative'|'Integer';
    Question: Partial<Question> | null;
    QuestionId: number;
    StartDate: string;
}

export interface StandardQuestion extends Question {
    DefaultAnswerValue: string | null;
    FlowAugmentors: Array<Partial<FlowAugmentor>> | null;
    QuestionInputType: 'String'|'Date'|'Integer'|'Boolean'|'Decimal';
    QuestionInputValues: Array<Partial<QuestionInputValue>> | null;
    QuestionUiType: 'CheckBox'|'Radio'|'Text'|'TextArea'|'SingleSelect'|'MultiSelect';
}

export interface QuestionnaireResult {
    Answers: Array<Partial<Answer>> | null;
    Campaign: string | null;
    CampaignId: number | null;
    CreatedDate: string | null;
    HartfordQuoteResponses: Array<Partial<HartfordQuoteResponse>> | null;
    HartfordQuoteXmlRequests: Array<Partial<HartfordQuoteXmlRequest>> | null;
    HasBeenFulfilled: boolean;
    Id: number;
    LeadType: string | null;
    Questionnaire: Partial<Questionnaire> | null;
    QuestionnaireId: number;
    ReferringUrl: string | null;
    Status: 'GettingStarted'|'GeneralInformation'|'BusinessClass'|'Location'|'CoverageAmount'|'AdditionalInformation'|'Error'|'Quotes'|'SelectedQuote';
    User: Partial<User> | null;
    UserId: number;
}

export interface ResponseValidatorAction {
    EndDate: string | null;
    FriendlyMessage: string | null;
    Id: number;
    IsExpired: boolean;
    Message: string | null;
    ResponseValidator: Partial<ResponseValidator> | null;
    ResponseValidatorActionToQuestionInputValues: Array<Partial<ResponseValidatorActionToQuestionInputValue>> | null;
    ResponseValidatorId: number;
    StartDate: string;
    Type: 'HardStop'|'Alert'|'Validation'|'SelectFilter';
}

export interface AddAnswerFlowAugmentorAction extends FlowAugmentorAction {
    AnswerPath: string | null;
    AnswerValue: string | null;
}

export interface QuestionGroupFlowAugmentorAction extends FlowAugmentorAction {
    QuestionGroup: Partial<QuestionGroup> | null;
    QuestionGroupId: number;
    QuestionnaireGroup: Partial<QuestionnaireGroup> | null;
    QuestionnaireGroupId: number;
}

export interface FlowAugmentorAction {
    EndDate: string | null;
    FlowAugmentor: Partial<FlowAugmentor> | null;
    FlowAugmentorId: number;
    Id: number;
    Index: number | null;
    IsExpired: boolean;
    Placement: 'Next'|'Last'|'AtIndex';
    StartDate: string;
    Type: 'Add'|'AddAnswer'|'Remove'|'Show';
}

export interface QuestionFlowAugmentorAction extends FlowAugmentorAction {
    Question: Partial<Question> | null;
    QuestionGroup: Partial<QuestionGroup> | null;
    QuestionGroupId: number;
    QuestionId: number;
}

export interface BopAnswer extends Answer {
    LocationGuid: string | null;
    SourceIdentifier: string | null;
    Value: string | null;
    XPath: string | null;
}

export interface Answer {
    CreatedDate: string;
    Id: number;
    QuestionnaireResult: Partial<QuestionnaireResult> | null;
    QuestionnaireResultId: number;
    QuestionText: string | null;
}

export interface LifeQuoteRequest extends QuoteRequest {
    AllowTextMessaging: boolean;
    City: string | null;
    CoverageAmount: Partial<number>;
    ErrorMessage: string | null;
    Gender: 'Unknown'|'Male'|'Female';
    HasFulfillBeenRequested: boolean;
    HealthRating: 'Unknown'|'PreferredPlus'|'Preferred'|'StandardPlus'|'Standard';
    Id: number;
    IsLargeQuoteRequest: boolean;
    LifeQuotes: Array<Partial<LifeQuote>> | null;
    PartnerId: string | null;
    ProductType: 'Unknown'|'YearTerm5'|'YearTerm10'|'YearTerm15'|'YearTerm20'|'YearTerm25'|'YearTerm30'|'YearTerm35'|'YearTerm40';
    RequestPayload: string | null;
    ResponsePayload: string | null;
    State: string | null;
    Status: 'GettingStarted'|'AboutYou'|'MillionDollarQuote'|'Uninsurable'|'Error'|'Quotes'|'SelectedQuote';
    Street1: string | null;
    Tobacco: 'Unknown'|'Yes'|'No';
    WasLargeQuoteEmailSent: boolean;
    ZipCode: string | null;
}

export interface LifeQuote {
    AnnualPremium: Partial<number>;
    Company: string | null;
    CompanyCode: string | null;
    CreatedDate: string;
    HealthCategory: string | null;
    Id: number;
    LifeQuoteRequest: Partial<LifeQuoteRequest> | null;
    LifeQuoteRequestId: number;
    LogoUrl: string | null;
    PolicyFee: Partial<number>;
    Premium: Partial<number>;
    Product: string | null;
    ProductCode: string | null;
}

export interface LifeAboutYouAnswerDto {
    CoverageAmount: Partial<number>;
    Gender: 'Unknown'|'Male'|'Female';
    HealthRating: 'Unknown'|'PreferredPlus'|'Preferred'|'StandardPlus'|'Standard';
    IsLargeQuoteRequest: boolean;
    ProductType: 'Unknown'|'YearTerm5'|'YearTerm10'|'YearTerm15'|'YearTerm20'|'YearTerm25'|'YearTerm30'|'YearTerm35'|'YearTerm40';
    Tobacco: 'Unknown'|'Yes'|'No';
}

export interface LifeAnswerDto {
    AllowTextMessaging: boolean;
    Campaign: string | null;
    CampaignId: number;
    City: string | null;
    CoverageAmount: Partial<number>;
    DateOfBirth: string;
    EmailAddress: string | null;
    FirstName: string | null;
    Gender: 'Unknown'|'Male'|'Female';
    HealthRating: 'Unknown'|'PreferredPlus'|'Preferred'|'StandardPlus'|'Standard';
    HomePhoneNumber: string | null;
    IsLargeQuoteRequest: boolean;
    LastName: string | null;
    LeadType: string | null;
    LifeQuoteRequestId: number | null;
    PartnerId: string | null;
    ProductType: 'Unknown'|'YearTerm5'|'YearTerm10'|'YearTerm15'|'YearTerm20'|'YearTerm25'|'YearTerm30'|'YearTerm35'|'YearTerm40';
    RecaptchaUserResponse: string | null;
    ReferringUrl: string | null;
    State: string | null;
    Street1: string | null;
    Tobacco: 'Unknown'|'Yes'|'No';
    UserGuid: string | null;
    ZipCode: string | null;
}

export interface LifeGettingStartedAnswerDto {
    AllowTextMessaging: boolean;
    Campaign: string | null;
    CampaignId: number;
    City: string | null;
    DateOfBirth: string;
    EmailAddress: string | null;
    FirstName: string | null;
    HomePhoneNumber: string | null;
    LastName: string | null;
    LeadType: string | null;
    LifeQuoteRequestId: number | null;
    PartnerId: string | null;
    RecaptchaUserResponse: string | null;
    ReferringUrl: string | null;
    State: string | null;
    Street1: string | null;
    UserGuid: string | null;
    ZipCode: string | null;
}

export interface LifeQuoteErrorResultDto {
    DateSubmitted: string;
    ErrorMessage: string | null;
    LifeQuoteRequestId: number;
    Name: string | null;
}

export interface LifeQuoteRequestSummaryDto {
    AboutYou: number;
    Error: number;
    GettingStarted: number;
    LGNWAttempt: number;
    LGNWCompleted: number;
    LLAttempt: number;
    LLCompleted: number;
    MacuAttempt: number;
    MacuCompleted: number;
    MillionDollarQuote: number;
    Quotes: number;
    SelectedQuote: number;
    Uninsurable: number;
}

export interface User {
    AutoQuoteRequest: Array<Partial<AutoQuoteRequest>> | null;
    CellPhoneNumber: string | null;
    DateOfBirth: string;
    EloquaContactId: number | null;
    EmailAddress: string | null;
    FirstName: string | null;
    HomePhoneNumber: string | null;
    Id: number;
    LastName: string | null;
    LegalEntityName: string | null;
    LifeQuoteRequest: Array<Partial<LifeQuoteRequest>> | null;
    QuestionnaireResults: Array<Partial<QuestionnaireResult>> | null;
    Token: string | null;
    UserGuid: string | null;
    VelocifyLeadId: number | null;
    WorkPhoneNumber: string | null;
}

export interface Agency {
    CampaignId: number;
    CarrierLogins: Array<Partial<CarrierLogin>> | null;
    Id: number;
    Name: string | null;
}

export interface CarrierError {
    AutoQuoteRequest: Partial<AutoQuoteRequest> | null;
    AutoQuoteRequestId: number;
    Carrier: Partial<Carrier> | null;
    CarrierId: number;
    Id: number;
    Message: string | null;
}

export interface CarrierLogin {
    Agency: Partial<Agency> | null;
    AgencyCode: string | null;
    AgencyId: number;
    Carrier: Partial<Carrier> | null;
    CarrierId: number;
    CompanyUnits: Array<Partial<CompanyUnit>> | null;
    Id: number;
    ImageUrl: string | null;
    Password: string | null;
    Username: string | null;
}

export interface DriverToVehicle {
    Driver: Partial<Driver> | null;
    DriverId: number;
    Id: number;
    Vehicle: Partial<Vehicle> | null;
    VehicleId: number;
}

export interface CompanyUnit {
    CarrierLogin: Partial<CarrierLogin> | null;
    CarrierLoginId: number;
    CompanyUnitId: number;
    Id: number;
    IsActive: boolean;
    State: string | null;
}

export interface Carrier {
    CarrierErrors: Array<Partial<CarrierError>> | null;
    CarrierLogins: Array<Partial<CarrierLogin>> | null;
    Id: number;
    Name: string | null;
}

export interface Accident {
    AmountOverSpeedLimit: number | null;
    BloodAlcoholLevel: number | null;
    DamageAmount: number | null;
    Date: string;
    Driver: Partial<Driver> | null;
    DriverId: number;
    Id: number;
    InjuryAmount: number | null;
    Type: 'vcConsumingAlcohol'|'vcFirstViolCode'|'vcDrvBusWhileIntox'|'MaxLienHolders'|'vcDUI'|'vcDWAI'|'vcDWI'|'vcEdProgRequired'|'vcIllegalTransport'|'vcImpliedConsent'|'vcOpenContainer'|'vcOperWhileIntox'|'vcLiquorViol'|'vcPedAcc'|'vcAccAtFault'|'vcHomocide'|'vcManslaughter'|'vcDUID'|'vcPossessionofSubst'|'vcHeadlightViol'|'vcMotorcycleEquipViol'|'vcDefectiveEquip'|'vcOverheight'|'vcOverlength'|'vcChangedLanesUnsafe'|'vcCrossingCenterMed'|'vcCrossingDividedHwy'|'vcCrossingYellowLine'|'vcDisregardNoPassZone'|'vcDrvOnLeftSide'|'vcDrvOnShoulder'|'vcDrvOnSidewalk'|'vcFailKeepRight'|'vcIllegalPass'|'vcImproperMerging'|'vcImproperPass'|'vcPassSchoolBus'|'vcImproperLaneUse'|'vcOperWhereProhib'|'vcAllowUnlicensed'|'vcAlteredDL'|'vcDisplayAnothersDL'|'vcLicSuspended'|'vcExpired'|'vcNoLicense'|'vcDuplicateDL'|'vcFailDisplayDL'|'vcFalseLicense'|'vcLoanedDL'|'vcNoChaufferLicense'|'vcNoDL'|'vcNoMotorcycleQualif'|'vcObtainByMisrep'|'vcOperDuringSusp'|'vcOperateOutOfClass'|'vcChargeableSuspension'|'vcViolateDLRestrict'|'vcPermitViol'|'vcNoLights'|'vcFailDimHeadLights'|'vcAccNotAtFault'|'vcDisobeyPolice'|'vcEludPolice'|'vcAvoidTrafficControl'|'vcFailToGiveSignal'|'vcFailToStopForTrain'|'vcFailObeyRailRoad'|'vcRunRedLight'|'vcRunStopSign'|'vcFailYieldPedestrian'|'vcFailRightOfWay'|'vcFailEmergencyVeh'|'vcImproperSignal'|'vcTooFast'|'vcTooSlowForConditions'|'vcDrvUnderMinimum'|'vcExcessAcceleration'|'vcFailControlSpeed'|'vcRacing'|'vcSpeeding'|'vcSpeedSchoolZone'|'vcUnsafeSpeed'|'vcImproperStart'|'vcSquealingTires'|'vcUnsafeStart'|'vcImproperTowing'|'vcTurnedAcrossDivided'|'vcTurnedWhenUnsafe'|'vcDriveLeftOfCenter'|'vcWrongSideOfRoad'|'vcWrongWayOnOneway'|'vcWrongWayIsland'|'vcWrongWayOnRoadway'|'vcAssaultWAuto'|'vcMiscMovingViol'|'vcMiscNonMovingViol'|'vcAlteredVIN'|'vcImproperBacking'|'vcCarPoolViol'|'vcCarelessDriving'|'vcChangeDriverMoving'|'vcCoasting'|'vcConvictionInsFraud'|'vcCriminalNegligence'|'vcDisregardSafety'|'vcDriversViewObstruct'|'vcDriveOnFireHose'|'vcDrvInSafetyZone'|'vcDrivingWOConsent'|'vcFailControlVehicle'|'vcFailToExchangeInfo'|'vcNoPayToll'|'vcFailToWearBelt'|'vcFailureOfDuty'|'vcFailSoundHorn'|'vcFelony'|'vcFollowingImproper'|'vcFollowingTooClose'|'vcImpedingTraffic'|'vcImproperDriving'|'vcBadTurnpikeStyle'|'vcIncreaseWhilePassed'|'vcUnattendedCar'|'vcLeavingScene'|'vcMVIViolation'|'vcNegligentCollision'|'vcNegligentDriving'|'vcNoLiabInsurance'|'vcParkingOnRoadway'|'vcProhibUTurn'|'vcProtectiveHeadGear'|'vcReckless'|'vcStealingAuto'|'vcUnrestrainedChild'|'vcUnsafeOperator'|'vcEmissionsViol'|'vcVehiclularInjury'|'vcViolSafetyZone'|'vcViolatePromiseAppear'|'vcCompClaim'|'vcAllowUnlawfulOperation'|'vcUMClaim'|'vcUIMClaim'|'MaxViolations'|'vcLastViolCode'|'vcMedPayClaim'|'vcCAFirstViolCode'|'vcAccidentWithPedestrian'|'vcAccidentAtFaultNoInjury'|'vcAccidentAtFaultInjury'|'vcFailureToReportAccident'|'vcAccidentNotAtFault'|'vcAggravatedAssaultWithAuto'|'vcAllOtherMovingViolations'|'vcAllOtherNonMovingViolations'|'vcAllowUnlawfulOperationOfVehicle'|'vcAllowUnlicensedDriver'|'vcAlteredForgedVIN'|'vcFailureToObeyTrafficDevice'|'vcUnsafeStartingBacking'|'vcDiamondLane'|'vcDiamondLaneCrossDoubleLine'|'vcCACarelessDriving'|'vcUnsafeLaneChange'|'vcChangingDriverMovingVehicle'|'vcCoastingGearsDisengaged'|'vcComprehensiveClaim'|'vcConsumingAlcoholWhileDriving'|'vcConvictionOfInsuranceFraud'|'vcCACriminalNegligence'|'vcCrossingCenterMedian'|'vcCrossingDividedHighway'|'vcCACrossingYellowLine'|'vcDisobeyPoliceOfficer'|'vcDisobeyTollHighwayOfficer'|'vcDisplayAlteredCounterfeitLicense'|'vcDisplayOtherPersonsLicense'|'vcDisregardNoPassingZone'|'vcDisregardOfSafety'|'vcDrivingLeftOfCenter'|'vcDriversViewObstructed'|'vcDrivingAtNightWithoutLights'|'vcDrivingOnLeftSideOfRoadway'|'vcDrivingOnShoulder'|'vcDrivingOnSidewalk'|'vcDrivingWrongSideOfRoad'|'vcDrivingOverFireHose'|'vcDrivingSchoolBusWhileIntoxicated'|'vcDrivingThroughSafetyZone'|'vcDrivingTooFastForConditions'|'vcDrivingTooSlowForConditions'|'vcDrivingWithoutOwnersConsent'|'vcDrivingWhileSuspendedRevoked'|'vcDrivingWithExpiredLicense'|'vcDrivingWithoutLicensePermit'|'vcDrivingWrongWayOneWay'|'vcDrivingWrongSideDividedHighway'|'vcDrivingUnderMinimum'|'vcDUIAlcoholDrugsNoInjury'|'vcDUIAlcoholDrugsInjuryOrDeath'|'vcMinorWithBACOverZeroFive'|'vcMinorWithBACOverZeroOne'|'vcDuplicateDriversLicense'|'vcEducationProgramRequired'|'vcEvadingPeaceOfficer'|'vcEvadingPeaceOfficerReckless'|'vcEvadingPeaceOfficerInjury'|'vcExcessiveAcceleration'|'vcFailToControlSpeed'|'vcFailToControlVehicle'|'vcFailToDisplayDriversLicense'|'vcFailToExchangeInformation'|'vcImproperTurnNoSignal'|'vcVehicleXingEvadingToll'|'vcFailToStopApproachingTrain'|'vcStopRequiredRailroadCrossing'|'vcFailToStopRedLight'|'vcFailToStopStopSign'|'vcFailToWearSeatBelt'|'vcYieldingRightOfWayPedestrian'|'vcFailureToYieldRightOfWay'|'vcFailureToYieldEmergencyVehicle'|'vcFailureOfDutyInjuryOrDeath'|'vcFailureToDimLights'|'vcFailureToKeepRight'|'vcFailureToSoundHorn'|'vcFalseEvidenceOfRegistration'|'vcFelonyInvolvingMotorVehicle'|'vcFollowingImproperly'|'vcFollowingTooClosely'|'vcDistanceBetweenVehicles'|'vcGivingImproperSignal'|'vcHomicideWithMotorVehicle'|'vcPassingOnRightOrShoulder'|'vcIllegalTransportationOfAlcohol'|'vcImpedingTrafficMovement'|'vcRefusalToSubmitToTest'|'vcCAImproperDriving'|'vcFreewayRampEnteringExiting'|'vcImproperMergingIntoTraffic'|'vcIllegalImproperUnsafePassing'|'vcStopForSchoolBus'|'vcCAImproperStart'|'vcImproperTowingRiding'|'vcCAImproperLaneUse'|'vcIncreaseSpeedWhileBeingPassed'|'vcLeaveEngineRunning'|'vcHitAndRunInjury'|'vcHitAndRunNoInjury'|'vcLightViolations'|'vcLoanLicenseToOther'|'vcClaimMedicalPayments'|'vcMotorVehicleInspection'|'vcMotorcyclePassengersEquipment'|'vcCANegligentCollision'|'vcCANegligentDriving'|'vcNoChauffeursLicense'|'vcNoDriversLicense'|'vcNoLiabilityInsurance'|'vcNoMotorcycleQualification'|'vcObtainLicenseByMisrepresentation'|'vcOpenContainerDriving'|'vcOpenContainerPossession'|'vcOperatingDuringLifeSuspension'|'vcOperatingOutOfClassification'|'vcOperatingWhereProhibited'|'vcUnsafeUnlawfullyEquippedVehicle'|'vcOverheightVehicle'|'vcOverlengthVehicle'|'vcCAParkingOnRoadway'|'vcPossessionControlledSubstance'|'vcIllegalTurnUTurn'|'vcIllegalTurnUTurnAtIntersection'|'vcCAProtectiveHeadGear'|'vcSpeedContestExhibitionOfSpeed'|'vcSpeedContestAidingAndAbetting'|'vcRecklessDrivingNoInjury'|'vcRecklessDrivingInjury'|'vcSpeeding65AndUnder'|'vcSpeedingOver65'|'vcSpeedingOver100'|'vcSpeedingTruckTractor'|'vcSpeedingConstructionZone'|'vcSpeedingWhileTowing'|'vcCommercialSpeedVehicle'|'vcSpeedingInSchoolZone'|'vcSquealingScreechingTires'|'vcCAStealingAuto'|'vcSuspensionChargeable'|'vcTurnAcrossDividedSection'|'vcUnsafeTurn'|'vcClaimUIM'|'vcClaimUM'|'vcChildPassengerRestraint'|'vcCAUnsafeOperator'|'vcRestrictedSpeedWeatherConditions'|'vcUnsafeStartParkStopStanding'|'vcVehicleEmissionsSuspension'|'vcVehicularInjury'|'vcVehicularManslaughterGrossNegligence'|'vcVehicularManslaughterNoGrossNegligence'|'vcViolationOfLicenseRestrictions'|'vcDrivingHoursEquipmentMaintenanceOperation'|'vcPermitDriverOutOfClassification'|'vcDrinkingInVehicle'|'vcPossessionOfAlcohol'|'vcViolationOfPromiseToAppear'|'vcWrongDirectionAroundTrafficIsland'|'vcWrongDirectionDividedStreet'|'vcClaimLiability'|'vcClaimCollision'|'vcClaimTowing'|'vcViolationOfSuspensionDUI'|'vcViolationOfRestrictionDUI'|'vcFalseStatement'|'vcFinancialResponsibility'|'vcBrakes'|'vcLicensePlate'|'vcExhaustModified'|'vcExplosivesTransportation'|'vcInterfereWithTrafficDevice'|'vcInterfereWithTrafficDeviceInjury'|'vcMaliciousMischiefTampering'|'vcMaliciousActsBodilyHarm'|'vcMaliciousActsRemoveMarker'|'vcThrowingSubstance'|'vcThrowingSubstanceInjury'|'vcThrowingLightedSubstance'|'vcThrowingMatterOnHighway'|'vcDisobeyConstructionSigns'|'vcPassingAnimals'|'vcPassCarStoppedForPedestrian'|'vcMaximumDesignatedSpeedVehicle'|'vcStopAtInoperativeSignal'|'vcTurnProhibitedBySign'|'vcTurnOnRedLight'|'vcUseOfTwoWayLeftTurnLane'|'vcTurnAcrossBicycleLane'|'vcYieldOnLeftTurn'|'vcYieldRightOfWayToBlindPedestrian'|'vcYieldWhenOvertaken'|'vcTranportingPersonInTruckLoadSpace'|'vcUnsafeOverweightLoad'|'vcUnsafeLoadNoPermit'|'vcEnterIntersectionWithoutSpace'|'vcTurnAtIntersectionWithoutSpace'|'vcAlteredLicensePlates'|'vcDoubleLinesOneBrokenLine'|'vcDrivingWithParkingLights'|'vcEnteringHighwayFromServiceRoad'|'vcOnRampExit'|'vcOpenDoor'|'vcRightOfOncomingVehicle'|'vcThreeLaneHighway'|'vcViolatingPromiseToCorrect'|'vcUsingWirelessPhone'|'vcUsingWirelessPhoneUnder18'|'vcTexting'|'vcTurnLaneUse'|'vcYieldToVehicleInIntersection'|'vcFailureToStop'|'vcDUIDrugsNoInjury'|'vcFailToYieldEnteringHighway'|'vcInsufficientSpaceAtRRCrossing'|'vcCommercialSpeed'|'vcDrivingUnregistered'|'vcLighting'|'vcOtherEquipment'|'vcTransportingExplosives'|'vcPassingSubjectToSection'|'vcOtherYield'|'vcSpillingLoad'|'vcCommercialChargeable'|'vcCommercialChargeableMoving'|'vcCommercialNonChargeable'|'vcCommercialNonChargeableMoving'|'vcDrivingOnLevee'|'vcProhibitedBikePath'|'vcCoastingProhibited'|'vcRidingInTrailer'|'vcOperatingGolfCartOnHighway'|'vcCALastViolCode'|'CAMaxViolations'|'AllOtherNonStandardCompID'|'AllOtherStandardCompID'|'AllOtherNonVoluntaryCompID' | null;
    VertaforeType: 'Speeding'|'DWI'|'StopSign'|'NotAtFaultAccident'|'OtherMinorViolation'|'OtherMajorViolation'|'NotAtFaultOther'|'AllOtherMinorInfractions'|'FailuretoStop' | null;
}

export interface ClientDetail extends IAddress {
    AutoQuoteRequest: Partial<AutoQuoteRequest> | null;
    Id: number;
    IsHomeOwned: boolean | null;
    IsTextMessagingAllowed: boolean;
}

export interface IVehicle {
    Make: string | null;
    Model: string | null;
    ModelYear: number;
    VIN: string | null;
}

export interface Driver {
    Accidents: Array<Partial<Accident>> | null;
    AutoQuoteRequest: Partial<AutoQuoteRequest> | null;
    AutoQuoteRequestId: number;
    DateOfBirth: string;
    DriverToVehicles: Array<Partial<DriverToVehicle>> | null;
    FirstLicensedDate: string | null;
    FirstName: string | null;
    Gender: string | null;
    HasLicense: boolean | null;
    Id: number;
    IsLicenseCurrent: boolean | null;
    LastName: string | null;
    LicenseStatus: string | null;
    MaritalStatus: string | null;
    RelationshipToInsured: string | null;
    StateLicense: string | null;
}

export interface VertaforeAutoLookup {
    AirBagRear: boolean;
    Alarm: boolean;
    AntilockBrakes: boolean;
    AntilockBrakes4Wheels: boolean;
    AntiTheftDevice: boolean;
    AutomaticSeatbelts: boolean;
    BodyType: string | null;
    CostNewCollSym: string | null;
    CostNewCompSym: string | null;
    CountryWidePerformance: string | null;
    Cylinders: number;
    DaytimeRunningLights: boolean;
    EngineDisplacementCubicInches: number;
    EngineSize: string | null;
    EngineType: string | null;
    FourWheelDrive: string | null;
    FullModelName: string | null;
    GVWWildCard: number;
    ISOCollSym: string | null;
    ISOCompSym: string | null;
    ISOLiabilitySymbol: string | null;
    ISOMedicalSymbol: string | null;
    ISOPerformanceCd: string | null;
    IsoSymbol: string | null;
    Key: string | null;
    ModelYear: string | null;
    NumericSymbol: string | null;
    PassiveAntiTheftDevice: boolean;
    PassiveRestraintDriver: boolean;
    PassiveRestraintPassenger: boolean;
    Performance: string | null;
    PLRMake: string | null;
    PriceNewSym: string | null;
    SideAirBags: boolean;
    VehEngine: string | null;
    VehId: string | null;
    VehMake: string | null;
    VehModel: string | null;
    VehSymbol: string | null;
    VehType: string | null;
    VehVIN: string | null;
    VINMasterVINPrefix: string | null;
    VINPrefix: string | null;
}

export interface PreviousPolicy {
    AutoQuoteRequest: Partial<AutoQuoteRequest> | null;
    CurrentPriorInsurance: 'Standard'|'None' | null;
    DoesHouseholdConsumeAlcohol: boolean | null;
    EducationLevel: 'NoHighSchoolDiplomaOrGed'|'HighSchoolDiplomaOrGed'|'VocationalTradeSchoolMilitary'|'CompletedSomeCollege'|'CurrentlyInCollege'|'CollegeDegree'|'GraduateWorkOrGraduateDegree';
    EffectiveDate: string | null;
    EnrollTelematicsProgram: boolean | null;
    Id: number;
    InjuryCoverageLimit: number;
    LiabilityCoverageLimit: number;
    MonthsInsured: number | null;
    PaperLess: boolean | null;
    PleaseAdviseMe: boolean | null;
    PolicyExpirationDate: string | null;
    PropertyDamageCoverageLimit: number | null;
    WasInsuredLast30Days: boolean;
}

export interface AutoQuote {
    AutoQuoteRequest: Partial<AutoQuoteRequest> | null;
    AutoQuoteRequestId: number;
    CarrierCompanyName: string | null;
    CompanyUnitId: number;
    CreatedDate: string;
    Error: string | null;
    FatalError: string | null;
    Id: number;
    LogoUrl: string | null;
    PayPlanDownPayment: number;
    PayPlanNumOfPayments: number;
    PayPlanPaymentAmount: number;
    PhoneCode: string | null;
    Premium: number;
    Term: number;
    Vehicles: Array<Partial<QuotedVehicle>> | null;
}

export interface QuotedVehicle extends IVehicle {
    AutoQuote: Partial<AutoQuote> | null;
    AutoQuoteId: number;
    CollisionDeductible: number | null;
    CollisionLimit: number | null;
    CollisionPremium: number | null;
    ComprehensiveDeductible: number | null;
    ComprehensiveLimit: number | null;
    ComprehensivePremium: number | null;
    Id: number;
    InjuryLimit: number | null;
    LiabilityBodilyInjuryDeductible: number | null;
    LiabilityBodilyInjuryPremium: number | null;
    LiabilityLimit: number | null;
    MedicalPaymentsDeductible: number | null;
    MedicalPaymentsLimit: number | null;
    MedicalPaymentsPremium: number | null;
    PersonalInjuryProtectionDeductible: number | null;
    PersonalInjuryProtectionLimit: number | null;
    PersonalInjuryProtectionPremium: number | null;
    PropertyDamageDeductible: number | null;
    PropertyDamageLimit: number | null;
    PropertyDamagePremium: number | null;
    RentalDeductible: number | null;
    RentalLimit: number | null;
    RentalPremium: number | null;
    TowingDeductible: number | null;
    TowingLimit: number | null;
    TowingPremium: number | null;
    UninsuredMotoristBodilyInjuryDeductible: number | null;
    UninsuredMotoristBodilyInjuryLimit: number | null;
    UninsuredMotoristBodilyInjuryPremium: number | null;
}

export interface AutoQuoteRequest extends QuoteRequest {
    AutoQuotes: Array<Partial<AutoQuote>> | null;
    CarrierErrors: Array<Partial<CarrierError>> | null;
    ClientDetail: Partial<ClientDetail> | null;
    Drivers: Array<Partial<Driver>> | null;
    HasFulfillBeenRequested: boolean;
    Id: number;
    IsVertafore: boolean | null;
    PlRaterExportQuoteUrl: string | null;
    PreviousPolicy: Partial<PreviousPolicy> | null;
    QuoteNotificationId: number;
    QuotingErrors: string | null;
    RequestedPolicyStartDate: string | null;
    RequestPayload: string | null;
    ResponsePayload: string | null;
    Status: 'GettingStarted'|'Policy'|'Vehicles'|'Drivers'|'Discounts'|'Error'|'Quotes'|'SelectedQuote';
    TransactionId: string | null;
    Vehicles: Array<Partial<Vehicle>> | null;
}

export interface Vehicle extends IVehicle {
    AnnualMilesDriven: number;
    AutoQuoteRequest: Partial<AutoQuoteRequest> | null;
    AutoQuoteRequestId: number;
    CollisionDeductible: number | null;
    ComprehensiveDeductible: number | null;
    DriverToVehicles: Array<Partial<DriverToVehicle>> | null;
    Id: number;
    MSRP: number | null;
    PrimaryDriverId: number | null;
    RentalCarReimbursementLimit: number | null;
    Sequence: number;
    TowingCoverageLimit: number | null;
    TransportationExpense: string | null;
    VehicleUsage: string | null;
}

