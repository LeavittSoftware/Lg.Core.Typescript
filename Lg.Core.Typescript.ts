// ----------------------
// <auto-generated>
//     generated using a custom program
// </auto-generated>
// ----------------------

export interface IChangeTracking {
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
}

export interface ICreatedBy {
    CreatorPerson: Partial<Person> | null;
    CreatorPersonId: number;
}

export interface Detail extends IIdentity {
    DataType: 'PhoneNumber'|'Url'|'Currency'|'String'|'DateTime'|'Int';
    Name: string | null;
    Section: string | null;
    SubCategory: string | null;
    Value: string | null;
}

export interface IIdentity {
    Id: number;
}

export interface Basket extends IIdentity {
    Fruits: Array<Partial<Fruit>> | null;
    Name: string | null;
}

export interface FruitMold extends IIdentity {
    Fruit: Partial<Fruit> | null;
    Name: string | null;
}

export interface FruitShape extends IIdentity {
    Fruit: Partial<Fruit> | null;
    Name: string | null;
}

export interface Fruit extends IIdentity {
    Basket: Partial<Basket> | null;
    BasketId: number | null;
    Bool1: boolean;
    Bool1Nullable: boolean | null;
    Byte1: number;
    Datetime1: string;
    Datetime1Nullable: string | null;
    Datetime2: string;
    Datetime2Nullable: string | null;
    DatetimeOffetSetOnConstructor: string;
    DatetimeSetOnConstructor: string;
    Decimal1: Partial<number>;
    Decimal1Nullable: number | null;
    Double1: number;
    Double1Nullable: number | null;
    FlagEnumSample: 'None'|'Sunday'|'Monday'|'Tuesday'|'Wednesday'|'Thursday'|'Friday'|'Saturday'|'All';
    Float1: number;
    Float1Nullable: number | null;
    FruitMold: Partial<FruitMold> | null;
    FruitShape: Partial<FruitShape> | null;
    Guid1: string;
    Guid1Nullable: string | null;
    Int1: number;
    Int1Nullable: number | null;
    Int641: number;
    Int641Nullable: number | null;
    Name: string | null;
    Pesticides: Array<Partial<Pesticide>> | null;
    SeasonAvailable: 'Spring'|'Winter'|'Summer'|'Fall';
    SeasonAvailableNullable: 'Spring'|'Winter'|'Summer'|'Fall' | null;
}

export interface Pesticide extends IIdentity {
    Fruits: Array<Partial<Fruit>> | null;
    Name: string | null;
}

export interface CPACDeduction extends Deduction {
}

export interface Deduction extends IIdentity {
    Amount: Partial<number>;
    Canceled: string | null;
    DateCreated: string;
    Enacted: string | null;
    Frequency: 'OneTime'|'PerPaycheck'|'Monthly'|'Annually'|'Quarterly';
    LGEmployeeRole: Partial<LGEmployeeRole> | null;
    LGEmployeeRoleId: number;
    Verified: string | null;
}

export interface LogEntryItem extends IIdentity {
    AutomatedApplication: Partial<AutomatedApplication> | null;
    AutomatedApplicationId: number;
    DateTime: string;
    Instance: string | null;
    Level: 'Info'|'Warn'|'Error';
    Message: string | null;
    Source: string | null;
    Type: 'Feedback'|'Summary';
}

export interface AutomatedApplication extends IExpirable, IIdentity {
    LastHeardFromDateTime: string | null;
    LastHeardFromIp: string | null;
    LastRunDateTime: string | null;
    LogEntryItems: Array<Partial<LogEntryItem>> | null;
    Name: string | null;
}

export interface EmailTemplate extends IIdentity, ICreatedBy {
    Body: string | null;
    CreatedDate: string;
    Name: string | null;
    Recipients: Array<Partial<EmailTemplateRecipient>> | null;
    SendLogs: Array<Partial<EmailTemplateLog>> | null;
    Subject: string | null;
}

export interface EmailTemplateLog extends IIdentity {
    EmailBody: string | null;
    EmailTemplate: Partial<EmailTemplate> | null;
    EmailTemplateId: number;
    IpAddress: string | null;
    Recipients: string | null;
    SentDate: string;
    StatusMessage: string | null;
    Subject: string | null;
}

export interface EmailTemplateRecipient extends IIdentity, ICreatedBy {
    CreatedDate: string;
    EmailAddress: string | null;
    EmailTemplate: Partial<EmailTemplate> | null;
    EmailTemplateId: number;
}

export interface TeamAttachment extends Attachment {
    FolderName: string | null;
    StorageFileNameAndPath: string | null;
    Team: Partial<Team> | null;
    TeamAttachmentType: 'TeamPicture';
    TeamId: number;
}

export interface PrizeToSegment extends IIdentity {
    Prize: Partial<Prize> | null;
    PrizeId: number;
    Segment: Partial<GameSegment> | null;
    SegmentId: number;
}

export interface GameSegment {
    EndDate: string;
    Id: number;
    Label: string | null;
    PrizeToSegments: Array<Partial<PrizeToSegment>> | null;
    StartDate: string;
    TheGame: Partial<TheGameGame> | null;
    TheGameId: number;
    Type: 'PointEntry'|'ExtendedPeriod';
}

export interface CrmGamePoint extends GamePoint {
    Commission: Partial<number>;
    CommissionFee: Partial<number>;
    OpportunityId: string;
    SplitPercentage: Partial<number> | null;
}

export interface GamePoint extends IIdentity, ICreatedBy {
    Amount: Partial<number>;
    ClientName: string | null;
    CreatedDate: string;
    DeletedByPerson: Partial<Person> | null;
    DeletedByPersonId: number | null;
    DeletedDate: string | null;
    EffectiveDate: string;
    IsDeleted: boolean;
    IsSecondSponsored: boolean;
    IsSponsored: boolean;
    TheGamePlayerPersonRole: Partial<TheGamePlayerPersonRole> | null;
    TheGamePlayerPersonRoleId: number;
}

export interface GamePrize extends Prize {
    GamePrizeType: 'SponsoredPrize'|'SecondSponsoredPrize'|'TopFiveOverallPrize'|'SponsoredOverallPrize';
    TheGameGame: Partial<TheGameGame> | null;
    TheGameGameId: number;
}

export interface League extends IIdentity {
    LeaguePrizes: Array<Partial<LeaguePrize>> | null;
    LeagueToTeams: Array<Partial<LeagueToTeam>> | null;
    Name: string | null;
    Sequence: number;
    TheGameGame: Partial<TheGameGame> | null;
    TheGameGameId: number;
}

export interface LeaguePrize extends Prize {
    League: Partial<League> | null;
    LeagueId: number;
    LeaguePrizeType: 'TeamPlay'|'Overall'|'OverallSponsored'|'Monthly';
}

export interface LeagueToTeam extends IIdentity {
    League: Partial<League> | null;
    LeagueId: number;
    Segment: Partial<GameSegment> | null;
    SegmentId: number;
    Team: Partial<Team> | null;
    TeamId: number;
}

export interface Prize extends IIdentity, IExpirable {
    Amount: Partial<number>;
    PrizeToSegments: Array<Partial<PrizeToSegment>> | null;
    Rank: number;
}

export interface Team extends IExpirable, IIdentity {
    LeagueToTeams: Array<Partial<LeagueToTeam>> | null;
    Members: Array<Partial<TheGamePlayerPersonRole>> | null;
    Name: string | null;
    TeamPictureAttachments: Array<Partial<TeamAttachment>> | null;
}

export interface TheGameGame extends IIdentity {
    EndDate: string;
    GracePeriodTicks: number;
    IsBlackedOut: boolean;
    IsDevelopment: boolean;
    IsExpired: boolean;
    Leagues: Array<Partial<League>> | null;
    Prizes: Array<Partial<GamePrize>> | null;
    RegistrationPersonRoles: Array<Partial<TheGameRegistrationPersonRole>> | null;
    Segments: Array<Partial<GameSegment>> | null;
    StartDate: string;
    Type: 'CL'|'PL';
}

export interface TheGameRegistrationPersonRole extends PersonRole {
    RegistrationNote: string | null;
    TheGame: Partial<TheGameGame> | null;
    TheGameId: number;
}

export interface TheGamePlayerPersonRole extends PersonRole {
    IsTeamCaptain: boolean;
    Points: Array<Partial<GamePoint>> | null;
    Team: Partial<Team> | null;
    TeamId: number;
}

export interface SurveyRespondentStatus extends IIdentity {
    CompletedDate: string;
    Person: Partial<Person> | null;
    PersonId: number;
    Survey: Partial<Survey> | null;
    SurveyId: number;
}

export interface SurveyRespondentToPeopleGroup extends IIdentity {
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
    Survey: Partial<Survey> | null;
    SurveyId: number;
}

export interface SurveyAdminToPeopleGroup extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
    Survey: Partial<Survey> | null;
    SurveyId: number;
}

export interface SurveyAdmin extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    Person: Partial<Person> | null;
    PersonId: number;
    Survey: Partial<Survey> | null;
    SurveyId: number;
}

export interface SurveyRespondent extends IIdentity {
    Person: Partial<Person> | null;
    PersonId: number;
    Survey: Partial<Survey> | null;
    SurveyId: number;
}

export interface SurveyResponse extends IIdentity {
    AnswerText: string | null;
    Comment: string | null;
    Person: Partial<Person> | null;
    PersonId: number | null;
    Question: Partial<SurveyQuestion> | null;
    QuestionId: number;
}

export interface SurveyAnswer extends IChangeTracking, ICreatedBy, IIdentity {
    CreatedDate: string;
    Question: Partial<SurveyQuestion> | null;
    QuestionId: number;
    Sequence: number;
    Text: string | null;
}

export interface Survey extends IIdentity, IChangeTracking, ICreatedBy {
    Admins: Array<Partial<SurveyAdmin>> | null;
    AdminToPeopleGroups: Array<Partial<SurveyAdminToPeopleGroup>> | null;
    CreatedDate: string;
    Description: string | null;
    ExpirationDate: string | null;
    FeaturedImage: Partial<SurveyFeaturedImageAttachment> | null;
    FeaturedImageId: number | null;
    IsAnonymous: boolean;
    IsExpired: boolean;
    Name: string | null;
    Questions: Array<Partial<SurveyQuestion>> | null;
    Respondents: Array<Partial<SurveyRespondent>> | null;
    RespondentStatuses: Array<Partial<SurveyRespondentStatus>> | null;
    RespondentToPeopleGroups: Array<Partial<SurveyRespondentToPeopleGroup>> | null;
    Sequence: number;
}

export interface SurveyFeaturedImageAttachment extends Attachment {
    FolderName: string | null;
    StorageFileNameAndPath: string | null;
    Surveys: Array<Partial<Survey>> | null;
}

export interface SurveyQuestion extends IChangeTracking, ICreatedBy, IIdentity {
    AllowComments: boolean;
    Answers: Array<Partial<SurveyAnswer>> | null;
    CreatedDate: string;
    IsRequired: boolean;
    Responses: Array<Partial<SurveyResponse>> | null;
    Sequence: number;
    Survey: Partial<Survey> | null;
    SurveyId: number;
    Text: string | null;
    Type: 'SingleSelect'|'MultiSelect'|'Text';
}

export interface Surge extends IIdentity, IExpirable {
    CreatorPerson: Partial<Person> | null;
    CreatorPersonId: number;
    EnableFirebase: boolean;
    GameOverDate: string | null;
    IntermissionLength: string;
    IsCorporate: boolean;
    IsDevSurge: boolean;
    IsGameOver: boolean;
    Name: string | null;
    NumSegments: number;
    Pauses: Array<Partial<SurgePause>> | null;
    RegisteredUsers: Array<Partial<SurgeRegisteredRole>> | null;
    Rules: string | null;
    SegmentLength: string;
    SurgeAdminPersonRoles: Array<Partial<SurgeAdminPersonRole>> | null;
    SurgePrizes: Array<Partial<SurgePrize>> | null;
    Teams: Array<Partial<SurgeTeam>> | null;
    Type: 'Standard'|'ConnectAndSell'|'FollowUpAndAppointment';
}

export interface SurgePoint extends IIdentity, IExpirable {
    CreatedByPerson: Partial<Person> | null;
    CreatedByPersonId: number;
    CrmAccountId: string | null;
    Date: string;
    EndedByPerson: Partial<Person> | null;
    EndedByPersonId: number | null;
    IsVisited: boolean;
    Name: string | null;
    Points: number;
    SurgePlayerPersonRole: Partial<SurgePlayerPersonRole> | null;
    SurgePlayerPersonRoleId: number;
    Type: 'Appointment'|'FollowUp';
}

export interface SurgePause extends IIdentity, IExpirable {
    Surge: Partial<Surge> | null;
    SurgeId: number;
}

export interface SurgeAdminPersonRole extends PersonRole {
    SurgeId: number;
    TheSurge: Partial<Surge> | null;
}

export interface SurgePlayerPersonRole extends PersonRole {
    IndividualPrizeAmount: Partial<number>;
    IndividualRank: number;
    IndividualTotalPoints: number;
    Points: Array<Partial<SurgePoint>> | null;
    SurgeTeam: Partial<SurgeTeam> | null;
    SurgeTeamId: number;
    TeamPrizePortion: Partial<number>;
    TopOnTeamPrizeAmount: Partial<number>;
    TopOnTeamRank: number;
}

export interface SurgePrize extends IIdentity, IExpirable {
    Amount: Partial<number>;
    Rank: number;
    Surge: Partial<Surge> | null;
    SurgeId: number;
    Type: 'TopOnTeam'|'TopTeams'|'TopIndividual'|'MostVisited';
}

export interface SurgeRegisteredRole extends PersonRole {
    Surge: Partial<Surge> | null;
    SurgeId: number;
}

export interface SurgeTeam extends IIdentity, IExpirable {
    Members: Array<Partial<SurgePlayerPersonRole>> | null;
    Name: string | null;
    PrizeAmount: Partial<number>;
    Rank: number;
    Surge: Partial<Surge> | null;
    SurgeId: number;
    TotalPoints: number;
}

export interface HolidayPartyReservation extends Reservation {
    HolidayPartyIdentifier: number;
}

export interface Reservation extends IIdentity {
    CancellationDate: string | null;
    ConfirmationCode: string | null;
    NumberAttending: number;
    Person: Partial<Person> | null;
    PersonId: number;
    RsvpDate: string;
}

export interface CReportComment extends ISynchronizable {
    Body: string | null;
    Company: Partial<Company> | null;
    CompanyId: number;
    Id: number;
    IsCompleted: boolean;
    LastModifiedBy: Partial<Person> | null;
    LastModifiedById: number;
    ReportDate: string;
}

export interface AgencyProductionBudget extends IIdentity {
    Company: Partial<Company> | null;
    CompanyId: number;
    ProducerBudgets: Array<Partial<ProducerProductionBudget>> | null;
    TotalCommissionRevenue: Partial<number>;
    TotalProducerProductionGoal: Partial<number>;
    Year: number;
}

export interface ProducerBudgetGoal extends IIdentity {
    FiscalPeriod: number;
    NewRevenue: Partial<number>;
    ProducerProductionBudget: Partial<ProducerProductionBudget> | null;
    ProducerProductionBudgetId: number;
    RenewRevenue: Partial<number>;
    TotalRevenue: Partial<number>;
}

export interface ProducerProductionBudget extends IIdentity {
    AgencyProductionBudget: Partial<AgencyProductionBudget> | null;
    AgencyProductionBudgetId: number;
    Goals: Array<Partial<ProducerBudgetGoal>> | null;
    Person: Partial<Person> | null;
    PersonId: number;
    TotalGoalAmount: Partial<number>;
}

export interface FailReason {
    Id: number;
    Message: string | null;
    SalesExpectationStatus: Partial<SalesExpectationStatus> | null;
    SalesExpectationStatusId: number;
}

export interface ProspectiveProducerRole extends PersonRole {
    CompanyAddress: Partial<CompanyAddress> | null;
    CompanyAddressId: number | null;
}

export interface SalesExpectation extends IExpirable, IIdentity, ICreatedBy {
    BoBComposition: Array<Partial<BoBComposition>> | null;
    CreatedDate: string;
    Expectations: Array<Partial<Expectation>> | null;
    HireDate: string | null;
    IsBookOfBusinessCompleted: boolean;
    IsCompleted: boolean;
    IsExpectationsCompleted: boolean;
    IsProducerAssumptionsCompleted: boolean;
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
    Person: Partial<Person> | null;
    PersonId: number;
    ProducerAssumptions: Array<Partial<ProducerAssumption>> | null;
    ProducerCommissionRates: Array<Partial<ProducerCommissionRate>> | null;
    Status: Partial<SalesExpectationStatus> | null;
}

export interface BoBComposition extends IExpirable, IIdentity, ICreatedBy {
    CompositionPercent: number;
    CreatedDate: string;
    InstallmentPercent: number;
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
    SalesExpectation: Partial<SalesExpectation> | null;
    SalesExpectationId: number;
    Type: 'CommercialLines'|'PersonalLines'|'Benefits'|'Life';
}

export interface Expectation extends IExpirable, IIdentity, ICreatedBy {
    CreatedDate: string;
    DrawAmount: number;
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
    ReportDate: string;
    SalesExpectation: Partial<SalesExpectation> | null;
    SalesExpectationId: number;
    SubsidyAmount: number;
    WrittenNewAmount: number;
}

export interface ProducerAssumption extends IExpirable, IIdentity, ICreatedBy {
    AssignedBook: number;
    AverageAccountSize: number;
    CreatedDate: string;
    IsExistingEmployee: boolean;
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
    NewToIndustry: boolean;
    NewToSales: boolean;
    QFAToCloseRatio: number;
    RetentionPercent: number;
    SalesExpectation: Partial<SalesExpectation> | null;
    SalesExpectationId: number;
    TalentSearch: boolean;
}

export interface AgencyCommissionRate extends IExpirable, IIdentity, ICreatedBy {
    CommissionRateType: 'CommercialLines'|'PersonalLines'|'Benefits'|'Life'|'Assigned';
    Company: Partial<Company> | null;
    CompanyId: number;
    CreatedDate: string;
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
    Rate: number;
    TransactionType: 'NewBusiness'|'RenewPolicy';
}

export interface ProducerCommissionRate extends IExpirable, IIdentity, ICreatedBy {
    CommissionPercent: number;
    CommissionRateType: 'CommercialLines'|'PersonalLines'|'Benefits'|'Life'|'Assigned';
    CreatedDate: string;
    EffectiveDate: string;
    ExpirationDate: string;
    LastModifiedByPerson: Partial<Person> | null;
    LastModifiedByPersonId: number | null;
    LastModifiedDate: string | null;
    SalesExpectation: Partial<SalesExpectation> | null;
    SalesExpectationId: number;
    TransactionType: 'NewBusiness'|'RenewPolicy';
}

export interface SalesExpectationStatus {
    ApprovalDate: string | null;
    Approver: Partial<Person> | null;
    ApproverId: number | null;
    FailReasons: Array<Partial<FailReason>> | null;
    Id: number;
    Reviewer: Partial<Person> | null;
    ReviewerId: number | null;
    ReviewerMessage: string | null;
    ReviewRequestDate: string | null;
    ReviewRequester: Partial<Person> | null;
    ReviewRequesterId: number | null;
    SalesExpectation: Partial<SalesExpectation> | null;
    StatusType: 'SystemRejected'|'AplRejected'|'SystemApproved'|'AplApproved';
}

export interface Ams360InstanceToGlDivisionCode extends IIdentity, ISynchronizable {
    GlDivisionCode: Partial<Ams360GlDivisionCode> | null;
    GlDivisionCodeId: number;
    Instance: Partial<Ams360Instance> | null;
    InstanceId: number;
}

export interface Ams360ProducerCodeType extends IIdentity {
    Name: string | null;
    SupplementalCodes: Array<Partial<Ams360SupplementalCode>> | null;
}

export interface Ams360SupplementalCode extends IIdentity {
    EmpCode: Partial<Ams360EmpCode> | null;
    EmpCodeId: number;
    Instance: Partial<Ams360Instance> | null;
    InstanceId: number;
    Name: string | null;
    ProducerCodeType: Partial<Ams360ProducerCodeType> | null;
    ProducerCodeTypeId: number;
}

export interface Ams360Database extends IIdentity {
    DatabaseServer: Partial<Ams360DatabaseServer> | null;
    DatabaseServerId: number;
    EmpCodes: Array<Partial<Ams360EmpCode>> | null;
    GlDivisionCodes: Array<Partial<Ams360GlDivisionCode>> | null;
    Name: string | null;
}

export interface Ams360GlBranchCode extends IIdentity {
    Code: string | null;
    GlDepartmentCodes: Array<Partial<Ams360GlDepartmentCode>> | null;
    GlDivisionCode: Partial<Ams360GlDivisionCode> | null;
    GlDivisionCodeId: number;
    Name: string | null;
}

export interface Ams360GlDepartmentCode extends IIdentity {
    Code: string | null;
    GlBranchCode: Partial<Ams360GlBranchCode> | null;
    GlBranchCodeId: number;
    GlGroupCodes: Array<Partial<Ams360GlGroupCode>> | null;
    Name: string | null;
}

export interface Ams360GlDivisionCode extends IIdentity {
    Ams360InstanceToGlDivisionCodes: Array<Partial<Ams360InstanceToGlDivisionCode>> | null;
    Code: string | null;
    Database: Partial<Ams360Database> | null;
    DatabaseId: number;
    GlBranchCodes: Array<Partial<Ams360GlBranchCode>> | null;
    Name: string | null;
}

export interface Ams360GlGroupCode extends IIdentity {
    Code: string | null;
    GlDepartmentCode: Partial<Ams360GlDepartmentCode> | null;
    GlDepartmentCodeId: number;
    Name: string | null;
}

export interface Ams360DatabaseServer extends IIdentity {
    Databases: Array<Partial<Ams360Database>> | null;
    Ip: string | null;
    Name: string | null;
    Password: string | null;
    Username: string | null;
}

export interface Ams360Instance extends IIdentity, IExpirable {
    Ams360InstanceToGlDivisionCodes: Array<Partial<Ams360InstanceToGlDivisionCode>> | null;
    Company: Partial<Company> | null;
    PersonRoles: Array<Partial<Ams360PersonRole>> | null;
    SupplementalCodes: Array<Partial<Ams360SupplementalCode>> | null;
    WebserviceApi: Partial<Ams360WebserviceApi> | null;
    WebserviceApiId: number | null;
}

export interface Ams360EmpCode extends IExpirable {
    Code: string | null;
    Database: Partial<Ams360Database> | null;
    DatabaseId: number;
    Email: string | null;
    FirstName: string | null;
    Id: number;
    IsProd: boolean;
    IsRep: boolean;
    LastName: string | null;
    PersonRoles: Array<Partial<Ams360PersonRole>> | null;
    Status: string | null;
    SupplementalCodes: Array<Partial<Ams360SupplementalCode>> | null;
}

export interface Ams360PersonRole extends PersonRole {
    EmpCode: Partial<Ams360EmpCode> | null;
    EmpCodeId: number;
    Instance: Partial<Ams360Instance> | null;
    InstanceId: number;
    IsManual: boolean;
}

export interface Ams360WebserviceApi extends IIdentity {
    Instances: Array<Partial<Ams360Instance>> | null;
    Name: string | null;
    Password: string | null;
    Url: string | null;
    Username: string | null;
}

export interface ManualEntryBranchCode extends IIdentity, IExpirable {
    Code: string | null;
    ManualEntryManagementSystem: Partial<ManualEntryManagementSystem> | null;
    ManualEntryManagementSystemId: number;
}

export interface ManualEntryGlDivCode extends IIdentity, IExpirable {
    Code: string | null;
    ManualEntryManagementSystem: Partial<ManualEntryManagementSystem> | null;
    ManualEntryManagementSystemId: number;
}

export interface ManualEntryManagementSystem {
    BranchCodes: Array<Partial<ManualEntryBranchCode>> | null;
    GlDivCodes: Array<Partial<ManualEntryGlDivCode>> | null;
}

export interface SageManagementSystem {
}

export interface BenefitPointManagementSystem {
}

export interface ManagementSystem extends IExpirable, IIdentity {
    Company: Partial<Company> | null;
    CompanyId: number;
    DatabaseName: string | null;
    ManagementSystemDatabaseServer: Partial<ManagementSystemDatabaseServer> | null;
    ManagementSystemDatabaseServerId: number | null;
    SupplementalProducerCodes: Array<Partial<SupplementalProducerCode>> | null;
}

export interface ManagementSystemDatabaseServer extends IIdentity {
    Ip: string | null;
    ManagementSystems: Array<Partial<ManagementSystem>> | null;
    Name: string | null;
    Password: string | null;
    Username: string | null;
}

export interface Lease {
    CompanyAddress: Partial<CompanyAddress> | null;
    HoldoverPercentage: Partial<number> | null;
    Id: number;
    LandlordType: 'ThirdParty'|'LLC'|'CoOwner' | null;
    LastModifiedBy: Partial<Person> | null;
    LastModifiedById: number | null;
    LastModifiedDate: string | null;
    LeaseAttachments: Array<Partial<LeaseAttachment>> | null;
    LeaseExpirationDate: string | null;
    Notes: string | null;
    RenewalDate: string | null;
    SquareFootage: Partial<number> | null;
}

export interface LeaseAttachment extends Attachment, IExpirable {
    FolderName: string | null;
    Lease: Partial<Lease> | null;
    LeaseId: number;
    StorageFileNameAndPath: string | null;
}

export interface EmployeeQuestion {
    CreatedDate: string;
    Id: number;
    PersonId: number | null;
    PrivacyOption: 'Public'|'ShowToPresident'|'Private';
    Question: string | null;
}

export interface PostAttachment extends Attachment {
    FolderName: string | null;
    Post: Partial<Post> | null;
    PostId: number;
    StorageFileNameAndPath: string | null;
}

export interface TrackableAttachment extends Attachment {
    DownloadedBy: Array<Partial<TrackableAttachmentToPerson>> | null;
}

export interface TrackableAttachmentToPerson {
    DownloadDate: string;
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
    TrackableAttachment: Partial<TrackableAttachment> | null;
    TrackableAttachmentId: number;
}

export interface Webinar {
    Id: number;
    Name: string | null;
    StartDate: string;
    Url: string | null;
}

export interface Folder extends ICreatedBy {
    CreatedDate: string;
    Id: number;
    Name: string | null;
}

export interface ForumAttachment extends TrackableAttachment {
    FolderName: string | null;
    Forum: Partial<Forum> | null;
    ForumFolder: Partial<ForumFolder> | null;
    ForumFolderId: number | null;
    ForumId: number;
    IsPinned: boolean;
    StorageFileNameAndPath: string | null;
}

export interface Comment {
    Body: string | null;
    CommentReactions: Array<Partial<CommentReaction>> | null;
    CreatedDate: string;
    Creator: Partial<Person> | null;
    CreatorId: number;
    DeletedDate: string | null;
    Id: number;
    IsDeleted: boolean;
    Message: Partial<Message> | null;
    MessageId: number;
    MessageNotificationToComments: Array<Partial<MessageNotificationToComment>> | null;
    Replies: Array<Partial<Reply>> | null;
}

export interface CommentReaction extends Reaction {
    Comment: Partial<Comment> | null;
    CommentId: number;
}

export interface ForumFolder extends Folder {
    Forum: Partial<Forum> | null;
    ForumAttachments: Array<Partial<ForumAttachment>> | null;
    ForumFolders: Array<Partial<ForumFolder>> | null;
    ForumId: number;
    IsReadOnly: boolean;
    ParentFolder: Partial<ForumFolder> | null;
    ParentFolderId: number | null;
}

export interface ForumSetting {
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    Type: 'SendEmailNotificationsOnPost';
}

export interface ForumOptOut {
    Date: string;
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
    Type: 'Email';
}

export interface Forum extends IExpirable {
    Admins: Array<Partial<ForumAdmin>> | null;
    CreatedDate: string;
    Creator: Partial<Person> | null;
    CreatorId: number;
    Description: string | null;
    ForumAttachments: Array<Partial<ForumAttachment>> | null;
    ForumFolders: Array<Partial<ForumFolder>> | null;
    ForumViews: Array<Partial<ForumView>> | null;
    Id: number;
    JoinRequests: Array<Partial<ForumJoinRequest>> | null;
    Members: Array<Partial<ForumMember>> | null;
    Name: string | null;
    OptOuts: Array<Partial<ForumOptOut>> | null;
    PeopleGroups: Array<Partial<ForumToPeopleGroup>> | null;
    Posts: Array<Partial<Post>> | null;
    Settings: Array<Partial<ForumSetting>> | null;
    Type: 'Private'|'Public'|'Hidden';
}

export interface ForumAdmin extends IExpirable {
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    Permissions: 'ManageLockedFolders'|'ManageForumAdmins'|'ManageMessages'|'ManageForumMembers'|'DeleteForum'|'EditForum'|'PostPinner'|'All';
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface ForumJoinRequest extends IExpirable {
    DeciderPerson: Partial<Person> | null;
    DeciderPersonId: number | null;
    EmailSentDate: string | null;
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    RequesterPerson: Partial<Person> | null;
    RequesterPersonId: number;
    Status: 'Pending'|'Accepted'|'Rejected'|'Canceled';
}

export interface ForumMember {
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface ForumToPeopleGroup {
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
}

export interface ForumView {
    Forum: Partial<Forum> | null;
    ForumId: number;
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
    VisitedDate: string;
}

export interface QuickLink {
    CreatedDate: string;
    Id: number;
    Name: string | null;
    Person: Partial<Person> | null;
    PersonId: number;
    Type: 'Internal'|'External';
    Url: string | null;
}

export interface MessageNotificationToReaction {
    Id: number;
    MessageNotification: Partial<MessageNotification> | null;
    MessageNotificationId: number;
    Reaction: Partial<Reaction> | null;
    ReactionId: number;
}

export interface MessageNotificationToComment {
    Comment: Partial<Comment> | null;
    CommentId: number;
    Id: number;
    MessageNotification: Partial<MessageNotification> | null;
    MessageNotificationId: number;
}

export interface MessageNotificationToReply {
    Id: number;
    MessageNotification: Partial<MessageNotification> | null;
    MessageNotificationId: number;
    Reply: Partial<Reply> | null;
    ReplyId: number;
}

export interface HomeUserAnalytic {
    Id: number;
    LastNotificationBellTapDate: string;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface Message {
    ActivityDate: string;
    Body: string | null;
    Comments: Array<Partial<Comment>> | null;
    CreatedDate: string;
    Creator: Partial<Person> | null;
    CreatorId: number;
    DeletedDate: string | null;
    Id: number;
    IsDeleted: boolean;
    IsDraft: boolean;
    LastEditedDate: string | null;
    MessageNotifications: Array<Partial<MessageNotification>> | null;
    PublishDate: string;
    Reactions: Array<Partial<MessageReaction>> | null;
}

export interface MessageReaction extends Reaction {
    Message: Partial<Message> | null;
    MessageId: number;
}

export interface MessageNotification {
    ActivityDate: string;
    Id: number;
    IsRead: boolean;
    Message: Partial<Message> | null;
    MessageId: number;
    MessageNotificationToComments: Array<Partial<MessageNotificationToComment>> | null;
    MessageNotificationToReactions: Array<Partial<MessageNotificationToReaction>> | null;
    MessageNotificationToReplies: Array<Partial<MessageNotificationToReply>> | null;
    Person: Partial<Person> | null;
    PersonId: number;
    ReadDate: string | null;
    Type: 'NewMessage'|'MessageActivity';
}

export interface News extends Message {
    Attachments: Array<Partial<NewsAttachment>> | null;
    Author: Partial<Person> | null;
    AuthorId: number | null;
    FeaturedImageAttachment: Partial<NewsAttachment> | null;
    FeaturedImageAttachmentId: number | null;
    LinkUri: string | null;
    PeopleGroups: Array<Partial<NewsToPeopleGroup>> | null;
    Recipients: Array<Partial<NewsRecipient>> | null;
    ShortDescription: string | null;
    ShowInCarousel: boolean;
    ShowInCarouselUntilDate: string | null;
    Title: string | null;
    Type: 'Announcement'|'Article'|'ExternalArticle';
}

export interface NewsAttachment extends Attachment {
    FeaturedNews: Array<Partial<News>> | null;
    FolderName: string | null;
    News: Partial<News> | null;
    NewsId: number;
    StorageFileNameAndPath: string | null;
}

export interface NewsRecipient {
    Id: number;
    News: Partial<News> | null;
    NewsId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface NewsToPeopleGroup {
    Id: number;
    News: Partial<News> | null;
    NewsId: number;
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
}

export interface Post extends Message {
    Attachments: Array<Partial<PostAttachment>> | null;
    Forum: Partial<Forum> | null;
    ForumId: number | null;
    IsPinned: boolean;
    PinnedUntil: string | null;
}

export interface Reaction {
    CreatedDate: string;
    Creator: Partial<Person> | null;
    CreatorId: number;
    Id: number;
    MessageNotificationToReactions: Array<Partial<MessageNotificationToReaction>> | null;
    Type: 'Like';
}

export interface Reply {
    Body: string | null;
    Comment: Partial<Comment> | null;
    CommentId: number;
    CreatedDate: string;
    Creator: Partial<Person> | null;
    CreatorId: number;
    DeletedDate: string | null;
    Id: number;
    IsDeleted: boolean;
    MessageNotificationToReplies: Array<Partial<MessageNotificationToReply>> | null;
    ReplyReactions: Array<Partial<ReplyReaction>> | null;
}

export interface ReplyReaction extends Reaction {
    Reply: Partial<Reply> | null;
    ReplyId: number;
}

export interface EloquaContact {
    CrmAccount: Partial<CrmAccount> | null;
    EloquaContactId: number;
    Id: number;
    IsMaster: boolean;
}

export interface CoreToEloquaSyncerLogEntry {
    CampaignToCrmAccountLastModifiedDate: string | null;
    CrmAccountLastModifiedDate: string | null;
    Id: number;
}

export interface CampaignToCrmAccount extends IIdentity, ICreatedBy {
    Campaign: Partial<Campaign> | null;
    CampaignId: number;
    CreatedDate: string;
    CrmAccount: Partial<CrmAccount> | null;
    CrmAccountId: number;
    InstanceId: number;
    LastModifiedDate: string | null;
}

export interface CampaignToPerson {
    Campaign: Partial<Campaign> | null;
    CampaignId: number;
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface EloquaEmailTemplateToPerson {
    EloquaEmailTemplate: Partial<EloquaEmailTemplate> | null;
    EloquaEmailTemplateId: number;
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface EloquaEmailTemplate {
    CssHeader: string | null;
    CurrentStatus: string | null;
    EloquaEmailId: number;
    EloquaEmailTemplateToPeople: Array<Partial<EloquaEmailTemplateToPerson>> | null;
    FolderId: number | null;
    HtmlBody: string | null;
    Id: number;
    Name: string | null;
    Subject: string | null;
}

export interface Campaign {
    ActivationId: number | null;
    CampaignToCrmAccounts: Array<Partial<CampaignToCrmAccount>> | null;
    CampaignToPeople: Array<Partial<CampaignToPerson>> | null;
    CurrentStatus: string | null;
    Description: string | null;
    EloquaCampaignId: number;
    FolderId: number | null;
    Id: number;
    Name: string | null;
}

export interface EloquaSyncLogEntry extends IExpirable, IIdentity {
    Company: Partial<Company> | null;
    CompanyId: number;
    LastSyncDate: string | null;
    Type: 'Ams360'|'BenefitPoint';
}

export interface CrmBulkImport extends IIdentity {
    CompletedDate: string | null;
    CreatedDate: string;
    CreatorPerson: Partial<Person> | null;
    CreatorPersonId: number;
    FailureDate: string | null;
    FailureReason: string | null;
    Failures: Array<Partial<CrmBulkImportFailure>> | null;
    FileName: string | null;
    RecordCount: number;
    SuccessCount: number;
}

export interface CrmBulkImportFailure {
    AccountName: string | null;
    AccountType: string | null;
    BusinessPhone: string | null;
    City: string | null;
    ContactFirstName: string | null;
    ContactLastName: string | null;
    ContactTitle: string | null;
    CrmBulkImport: Partial<CrmBulkImport> | null;
    CrmBulkImportId: number;
    Description: string | null;
    DuplicateFieldType: 'None'|'Name'|'Address'|'Email'|'Phone'|'ContactFullname' | null;
    Email: string | null;
    ErrorMessage: string | null;
    FollowUpDate: string | null;
    Id: number;
    State: string | null;
    Street1: string | null;
    Topic: string | null;
    Type: 'GeneralFailure'|'Duplicate';
    Website: string | null;
    XDate: string | null;
    Zip: string | null;
}

export interface CrmAccount extends IIdentity {
    AccountId: string;
    AccountStage: 'Lead'|'Suspect'|'Prospect'|'Client' | null;
    AccountType: number;
    Address1: string | null;
    Address2: string | null;
    Ams360AccountId: string | null;
    AnnualPayroll: string | null;
    CampaignToCrmAccounts: Array<Partial<CampaignToCrmAccount>> | null;
    City: string | null;
    ContactFirstName: string | null;
    ContactJobTitle: string | null;
    ContactLastName: string | null;
    CreatedOn: string | null;
    CrmInstance: 'Production'|'Uat'|'Dev';
    DoNotCall: boolean;
    EffectiveDate: string | null;
    EloquaContact: Partial<EloquaContact> | null;
    Email: string | null;
    InitialAppointment: string | null;
    LastActivityDate: string | null;
    LastModifiedDate: string | null;
    NAICSCode: string | null;
    Name: string | null;
    NumberOfEmployees: string | null;
    NumberOfLocations: string | null;
    Opportunities: Array<Partial<CrmOpportunity>> | null;
    OriginalSource: string | null;
    OwnerId: string;
    Person: Partial<Person> | null;
    PersonId: number | null;
    Phone: string | null;
    PotentialRevenue: Partial<number> | null;
    PreferredContactMethod: 'Any'|'Email'|'Phone'|'Fax'|'Mail'|'Text';
    RecentSource: string | null;
    StageClientDate: string | null;
    StageProspectDate: string | null;
    StageSuspectDate: string | null;
    State: string | null;
    StateCode: 'Active'|'Inactive';
    Status: 'Active'|'Inactive';
    SurgeId: number | null;
    Topic: string | null;
    WrittenYtd: Partial<number> | null;
    Zip: string | null;
}

export interface CrmCommission extends IIdentity {
    Amount: Partial<number>;
    CommissionSplitId: string | null;
    LastModifiedDate: string | null;
    Name: string | null;
    Opportunity: Partial<CrmOpportunity> | null;
    OpportunityId: number;
    OwnerId: string;
    Percent: Partial<number>;
    Person: Partial<Person> | null;
    PersonId: number | null;
    Sponsor: number | null;
}

export interface CrmAuditSyncLogEntry {
    Action: string | null;
    CrmInstance: 'Production'|'Uat'|'Dev';
    EntityType: string | null;
    Id: number;
    LastSyncDate: string;
}

export interface CrmUserPersonRole extends PersonRole {
    CrmInstance: 'Production'|'Uat'|'Dev';
    SystemUserGuid: string;
}

export interface CrmOpportunity extends IIdentity {
    Account: Partial<CrmAccount> | null;
    AccountId: number;
    AppointmentDate: string | null;
    Carrier: number | null;
    CommissionFee: Partial<number>;
    CommissionPercentage: Partial<number>;
    ConversationDate: string | null;
    CrmCommissions: Array<Partial<CrmCommission>> | null;
    EffectiveDate: string | null;
    LastModifiedDate: string | null;
    LineOfBusiness: number;
    LineOfCoverage: number;
    LineOfCoverageFriendlyName: string | null;
    LostDate: string | null;
    Name: string | null;
    NewOrRenewal: 'New'|'Renewal';
    OpportunityId: string;
    OwnerId: string;
    Premium: Partial<number>;
    PresentationDate: string | null;
    QualifiedDate: string | null;
    ReportingDate: string | null;
    SalesStageCode: number;
    SoldDate: string | null;
    StateCode: 'Active'|'Inactive';
    SubmissionDate: string | null;
    TotalRevenue: Partial<number>;
}

export interface Scope extends IIdentity, ISynchronizable, IExpirable {
    Description: string | null;
    Name: string | null;
    Permissions: Array<Partial<Permission>> | null;
}

export interface DepartmentPeopleGroup extends PeopleGroup {
}

export interface Department {
    Company: Partial<Company> | null;
    CompanyId: number;
    Id: number;
    LGEmployeeRoles: Array<Partial<LGEmployeeRole>> | null;
    Name: string | null;
}

export interface Building {
    BuildingToCompanyAddresses: Array<Partial<BuildingToCompanyAddress>> | null;
    Id: number;
    Name: string | null;
    PeopleGroups: Array<Partial<BuildingPeopleGroup>> | null;
}

export interface LeavittLandCompanyRole extends CompanyRole {
}

export interface CompanyPeopleGroup extends PeopleGroup {
}

export interface JobRolePeopleGroup extends PeopleGroup {
    JobRoleType: Partial<JobRoleType> | null;
    JobRoleTypeId: number;
}

export interface BuildingPeopleGroup extends PeopleGroup {
    Building: Partial<Building> | null;
    BuildingId: number;
}

export interface BuildingToCompanyAddress {
    Building: Partial<Building> | null;
    BuildingId: number;
    CompanyAddress: Partial<CompanyAddress> | null;
    CompanyAddressId: number;
    Id: number;
}

export interface StatePeopleGroup extends PeopleGroup {
}

export interface GuestPersonRole extends PersonRole, ICreatedBy {
    Description: string | null;
    RequestedByPerson: Partial<Person> | null;
    RequestedByPersonId: number;
}

export interface CarrierCompanyRole extends CompanyRole {
}

export interface CompanyContactPersonRole extends PersonRole {
    ContactCompany: Partial<Company> | null;
    ContactCompanyId: number;
    Title: string | null;
}

export interface EmailNotificationDeliveryMethod extends NotificationDeliveryMethod {
    EmailAddressTypes: 'PrimaryWork'|'AlternativeWork'|'Personal'|'AlternativePersonal'|'BenefitsHelp'|'Surge';
}

export interface InAppNotificationDeliveryMethod extends NotificationDeliveryMethod {
    AppName: string | null;
}

export interface InAppNotification extends IIdentity {
    AppName: string | null;
    CreatedDate: string;
    Message: string | null;
    Notification: Partial<Notification> | null;
    NotificationId: number;
    Recipient: Partial<Person> | null;
    RecipientId: number;
    Status: 'Read'|'Unread'|'Archived';
    Subject: string | null;
}

export interface InvestorPersonRole extends PersonRole {
}

export interface JobRoleAssignmentPercentage extends IExpirable {
    Id: number;
    JobRole: Partial<JobRole> | null;
    JobRoleId: number;
    Percentage: number;
    Type: 'CommercialLines'|'PersonalLines'|'Benefits'|'Life';
}

export interface CityPeopleGroup extends PeopleGroup {
}

export interface LogSummaryNotificationMessage extends NotificationMessage {
    AppId: number;
}

export interface PersonAdpAccount extends IIdentity {
    AssociateOid: string | null;
    Person: Partial<Person> | null;
}

export interface NotificationDistrubutionGroupRole extends PersonRole {
}

export interface NotificationMessage {
    Id: number;
    Notification: Partial<Notification> | null;
}

export interface LLCCompanyRole extends CompanyRole {
    FolderPath: string | null;
}

export interface AuditorCompanyRole extends CompanyRole {
    PeopleRoles: Array<Partial<AuditorPersonRole>> | null;
}

export interface CompanyGroupToCompany extends IExpirable, IIdentity, ISynchronizable {
    Company: Partial<Company> | null;
    CompanyGroup: Partial<CompanyGroup> | null;
    CompanyGroupId: number;
    CompanyId: number;
}

export interface CompanyRoleClosureType extends IIdentity {
    CompanyRole: Partial<CompanyRole> | null;
}

export interface CompanyUhcCode extends IIdentity {
    Company: Partial<Company> | null;
    HsaStructureField4Code: string | null;
    MedStructureField4Code: string | null;
}

export interface CorporateDisposalClosureType extends CompanyRoleClosureType {
}

export interface DisaffiliationClosureType extends CompanyRoleClosureType {
}

export interface AutomatedUserRole extends PersonRole {
}

export interface AuditorPersonRole extends PersonRole {
    AuditorCompanyRoleId: number;
    CompanyRole: Partial<AuditorCompanyRole> | null;
}

export interface MergerClosureType extends CompanyRoleClosureType {
    MergedWith: Partial<CompanyRole> | null;
    MergedWithId: number;
}

export interface LdapPeopleGroup extends PeopleGroup {
    Sid: string | null;
}

export interface Notification extends IIdentity, IExpirable, ICreatedBy {
    InAppNotifications: Array<Partial<InAppNotification>> | null;
    NotificationActivityLogs: Array<Partial<NotificationActivityLog>> | null;
    NotificationMessage: Partial<NotificationMessage> | null;
    PersonToNotifications: Array<Partial<PersonToNotification>> | null;
    Subject: string | null;
    Triggers: Array<Partial<Trigger>> | null;
}

export interface NotificationActivityLog extends IIdentity {
    Notification: Partial<Notification> | null;
    NotificationDeliveryMethod: Partial<NotificationDeliveryMethod> | null;
    NotificationDeliveryMethodId: number;
    NotificationId: number;
    Recipient: Partial<Person> | null;
    RecipientId: number;
    SentDate: string;
}

export interface NotificationDeliveryMethod extends IIdentity, IExpirable {
    PersonToNotification: Partial<PersonToNotification> | null;
    PersonToNotificationId: number;
}

export interface PeopleGroupToPermissionGroup extends IExpirable, IIdentity {
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
    PermissionGroup: Partial<PermissionGroup> | null;
    PermissionGroupId: number;
}

export interface PersonToNotification extends IIdentity, IExpirable, ICreatedBy {
    Notification: Partial<Notification> | null;
    NotificationDeliveryMethods: Array<Partial<NotificationDeliveryMethod>> | null;
    NotificationId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface PersonToPeopleGroup extends IIdentity, IExpirable, ISynchronizable {
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface PermissionToPeopleGroup extends IExpirable, IIdentity {
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
    Permission: Partial<Permission> | null;
    PermissionId: number;
}

export interface PermissionToPermissionGroup extends IExpirable, IIdentity {
    Permission: Partial<Permission> | null;
    PermissionGroup: Partial<PermissionGroup> | null;
    PermissionGroupId: number;
    PermissionId: number;
}

export interface PersonToPermissionGroup extends IExpirable, IIdentity {
    PermissionGroup: Partial<PermissionGroup> | null;
    PermissionGroupId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface PersonToPermission extends IExpirable, IIdentity {
    Permission: Partial<Permission> | null;
    PermissionId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface StaticNotificationMessage extends NotificationMessage {
    Message: string | null;
}

export interface Trigger extends IIdentity, IExpirable, ICreatedBy {
    DaysOfMonth: 'None'|'First'|'Second'|'Third'|'Fourth'|'Fifth'|'Sixth'|'Seventh'|'Eighth'|'Ninth'|'Tenth'|'Eleventh'|'Twelfth'|'Thirteenth'|'Fourteenth'|'Fiftieth'|'Sixteenth'|'Seventeenth'|'Eighteenth'|'Nineteenth'|'Twentieth'|'Twentyfirst'|'Twentysecond'|'Twentythrid'|'Twentyfourth'|'Twentyfifth'|'Twentysixth'|'Twentyseventh'|'Twentyeighth'|'Twentyninth'|'Thirtieth'|'Even'|'Thirtyfirst'|'Odd'|'All';
    DaysOfWeek: 'None'|'Sunday'|'Monday'|'Tuesday'|'Wednesday'|'Thursday'|'Friday'|'Saturday'|'All';
    Frequency: 'OneTime'|'Hourly'|'Daily'|'Weekly'|'Monthly'|'Minutes';
    Interval: number | null;
    IsComplete: boolean;
    LastRunDate: string | null;
    Notification: Partial<Notification> | null;
    NotificationId: number;
}

export interface CompanyDivision extends IExpirable, IIdentity, ISynchronizable {
    Company: Partial<Company> | null;
    CompanyId: number;
    JobRoleToDivisions: Array<Partial<JobRoleToDivision>> | null;
    Name: string | null;
}

export interface CompanyTeam extends IExpirable, IIdentity, ISynchronizable {
    Company: Partial<Company> | null;
    CompanyId: number;
    JobRoleToTeams: Array<Partial<JobRoleToTeam>> | null;
    Name: string | null;
}

export interface LGEmployeeRoleToCompanyAddress extends IExpirable, IIdentity, ISynchronizable {
    CompanyAddress: Partial<CompanyAddress> | null;
    CompanyAddressId: number;
    CreatedBy: Partial<Person> | null;
    CreatedById: number;
    LastModifiedBy: Partial<Person> | null;
    LastModifiedById: number | null;
    LGEmployeeRole: Partial<LGEmployeeRole> | null;
    LGEmployeeRoleId: number;
}

export interface LGEmployeeRoleTitle extends IExpirable, IIdentity, ISynchronizable {
    LGEmployeeRole: Partial<LGEmployeeRole> | null;
    LGEmployeeRoleId: number;
    Title: string | null;
}

export interface JobRoleToTeam extends IExpirable, IIdentity, ISynchronizable {
    CompanyTeam: Partial<CompanyTeam> | null;
    CompanyTeamId: number;
    JobRole: Partial<JobRole> | null;
    JobRoleId: number;
}

export interface JobRoleToDivision extends IExpirable, IIdentity, ISynchronizable {
    CompanyDivision: Partial<CompanyDivision> | null;
    CompanyDivisionId: number;
    JobRole: Partial<JobRole> | null;
    JobRoleId: number;
}

export interface JobRoleType extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    CreatedDate: string;
    IsFullTimeEquivalenceType: boolean;
    JobRolePeopleGroups: Array<Partial<JobRolePeopleGroup>> | null;
    JobRoles: Array<Partial<JobRole>> | null;
    Name: string | null;
}

export interface INote {
    CreatorPerson: Partial<Person> | null;
    CreatorPersonId: number;
    Text: string | null;
}

export interface PersonName extends IExpirable, IIdentity, ISynchronizable {
    FirstName: string | null;
    LastName: string | null;
    MiddleName: string | null;
    Person: Partial<Person> | null;
    PersonId: number;
    Type: 'Legal'|'Preffered';
}

export interface ITag {
    CreatorPerson: Partial<Person> | null;
    CreatorPersonId: number;
    Name: string | null;
}

export interface BaseChangeTracking {
    Created: string;
    CreatedBy: Partial<Person> | null;
    CreatedById: number;
    LastModified: string;
    LastModifiedBy: Partial<Person> | null;
    LastModifiedById: number;
}

export interface Attachment extends IIdentity, ISynchronizable {
    AllowGuestReadAccess: boolean;
    BaseUncFileStoragePath: string | null;
    ContentType: string | null;
    DeletedByPerson: Partial<Person> | null;
    DeletedByPersonId: number | null;
    DeletedDate: string | null;
    Description: string | null;
    Extension: string | null;
    File: string | null;
    FileName: string | null;
    GroupPermissions: Array<Partial<GroupToAttachmentPermission>> | null;
    IsDeleted: boolean;
    Name: string | null;
    Owner: Partial<Person> | null;
    OwnerId: number;
    PeoplePermissions: Array<Partial<PersonToAttachmentPermission>> | null;
    Size: number;
    StorageFileName: string | null;
}

export interface GroupToAttachmentPermission extends BaseChangeTracking, IIdentity, ISynchronizable {
    Attachment: Partial<Attachment> | null;
    AttachmentId: number;
    CanRead: boolean;
    CanUpdate: boolean;
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
}

export interface PersonToAttachmentPermission extends BaseChangeTracking, IIdentity, ISynchronizable {
    Attachment: Partial<Attachment> | null;
    AttachmentId: number;
    CanRead: boolean;
    CanUpdate: boolean;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface AppCategory extends IIdentity, ISynchronizable {
    Apps: Array<Partial<App>> | null;
    Description: string | null;
    Name: string | null;
}

export interface JobRole extends Role {
    AssignmentPercentages: Array<Partial<JobRoleAssignmentPercentage>> | null;
    Company: Partial<Company> | null;
    CompanyId: number;
    DirectReports: Array<Partial<SupervisorJobRole>> | null;
    JobRoleToDivisions: Array<Partial<JobRoleToDivision>> | null;
    JobRoleToTeams: Array<Partial<JobRoleToTeam>> | null;
    JobRoleType: Partial<JobRoleType> | null;
    JobRoleTypeId: number;
    LGEmployeeRole: Partial<LGEmployeeRole> | null;
    LGEmployeeRoleId: number;
    SupervisorJobRoles: Array<Partial<SupervisorJobRole>> | null;
    TotalAssignmentPercent: number;
}

export interface PersonUltiProAccount extends IIdentity, ISynchronizable {
    EeId: string | null;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface SupervisorJobRole extends IExpirable, IIdentity, ISynchronizable {
    JobRole: Partial<JobRole> | null;
    JobRoleId: number;
    SupervisorRole: Partial<JobRole> | null;
    SupervisorRoleId: number;
}

export interface FullTimeEquivalent extends IExpirable, IIdentity, ISynchronizable {
    LGEmployeeRole: Partial<LGEmployeeRole> | null;
    LGEmployeeRoleId: number;
    Value: number;
}

export interface PersonAddress extends Address {
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface CompanyGroup extends Group {
    CompanyGroupToCompanies: Array<Partial<CompanyGroupToCompany>> | null;
}

export interface PeopleGroup extends Group, IExpirable {
    CourseAdminPeopleGroups: Array<Partial<CourseAdminPeopleGroup>> | null;
    CourseMemberPeopleGroups: Array<Partial<CourseMemberPeopleGroup>> | null;
    CourseReporteeToPeopleGroups: Array<Partial<CourseReporteeToPeopleGroup>> | null;
    ForumToPeopleGroups: Array<Partial<ForumToPeopleGroup>> | null;
    NewsToPeopleGroups: Array<Partial<NewsToPeopleGroup>> | null;
    PeopleGroupToPermissionGroups: Array<Partial<PeopleGroupToPermissionGroup>> | null;
    PeopleGroupToWebComponentSlides: Array<Partial<PeopleGroupToWebComponentSlide>> | null;
    PermissionToPeopleGroups: Array<Partial<PermissionToPeopleGroup>> | null;
    PersonToPeopleGroups: Array<Partial<PersonToPeopleGroup>> | null;
    SurveyAdminToPeopleGroups: Array<Partial<SurveyAdminToPeopleGroup>> | null;
    SurveyRespondentToPeopleGroups: Array<Partial<SurveyRespondentToPeopleGroup>> | null;
}

export interface ProfilePictureAttachment extends Attachment {
    FolderName: string | null;
    Length: number;
    StorageFileNameAndPath: string | null;
}

export interface IAddress {
    AddressType: 'Business'|'Home'|'TheGamePrize'|'Surge';
    City: string | null;
    Country: string | null;
    County: string | null;
    State: string | null;
    Street1: string | null;
    Street2: string | null;
    Zip: string | null;
}

export interface Role extends IExpirable, IIdentity, ISynchronizable {
}

export interface Address extends IAddress, IExpirable, ISynchronizable, IIdentity {
    UTCTimeZoneOffset: number | null;
}

export interface AgencyRole extends CompanyRole {
    FiscalPeriods: Array<Partial<FiscalPeriod>> | null;
    FolderPath: string | null;
}

export interface App extends IIdentity, ISynchronizable, IExpirable {
    AccessPermission: Partial<Permission> | null;
    AccessPermissionId: number | null;
    Category: Partial<AppCategory> | null;
    CategoryId: number;
    DataControl: string | null;
    Description: string | null;
    Name: string | null;
    Permissions: Array<Partial<Permission>> | null;
    Uri: string | null;
}

export interface Company extends IExpirable, IIdentity, ISynchronizable {
    Addresses: Array<Partial<CompanyAddress>> | null;
    AgencyCommissionRates: Array<Partial<AgencyCommissionRate>> | null;
    Ams360Instance: Partial<Ams360Instance> | null;
    BookOfBusinessChanges: Array<Partial<BookOfBusinessChange>> | null;
    CompanyGroupToCompanies: Array<Partial<CompanyGroupToCompany>> | null;
    CompanyUhcCode: Partial<CompanyUhcCode> | null;
    ContactPersonRoles: Array<Partial<CompanyContactPersonRole>> | null;
    CReportComments: Array<Partial<CReportComment>> | null;
    Departments: Array<Partial<Department>> | null;
    Divisions: Array<Partial<CompanyDivision>> | null;
    EloquaSyncLogEntry: Partial<EloquaSyncLogEntry> | null;
    EmailAddresses: Array<Partial<CompanyEmailAddress>> | null;
    JobRoles: Array<Partial<JobRole>> | null;
    ManagementSystems: Array<Partial<ManagementSystem>> | null;
    Name: string | null;
    Names: Array<Partial<CompanyName>> | null;
    PhoneNumbers: Array<Partial<CompanyPhoneNumber>> | null;
    ProductionBudgets: Array<Partial<AgencyProductionBudget>> | null;
    Roles: Array<Partial<CompanyRole>> | null;
    Teams: Array<Partial<CompanyTeam>> | null;
    UltiProAccount: Partial<CompanyUltiProAccount> | null;
}

export interface CompanyAddress extends Address {
    BuildingToCompanyAddresses: Array<Partial<BuildingToCompanyAddress>> | null;
    Company: Partial<Company> | null;
    CompanyId: number;
    Lease: Partial<Lease> | null;
    LGEmployeeRoleToCompanyAddresses: Array<Partial<LGEmployeeRoleToCompanyAddress>> | null;
    PhoneNumbers: Array<Partial<CompanyAddressPhoneNumber>> | null;
    ProspectiveProducerRoles: Array<Partial<ProspectiveProducerRole>> | null;
    UltiProAccount: Partial<CompanyAddressUltiProAccount> | null;
}

export interface CompanyAddressPhoneNumber extends PhoneNumber {
    CompanyAddress: Partial<CompanyAddress> | null;
    CompanyAddressId: number;
}

export interface CompanyEmailAddress extends EmailAddress {
    Company: Partial<Company> | null;
    CompanyId: number;
}

export interface CompanyName extends IExpirable, IIdentity, ISynchronizable {
    Company: Partial<Company> | null;
    CompanyId: number;
    CompanyNameType: 'HrCompanyName'|'HrCompanyDbaName'|'Legal'|'Short'|'Main';
    Name: string | null;
}

export interface CompanyPhoneNumber extends PhoneNumber {
    Company: Partial<Company> | null;
    CompanyId: number;
}

export interface CompanyRole extends Role {
    ClosureType: Partial<CompanyRoleClosureType> | null;
    Company: Partial<Company> | null;
    CompanyId: number;
}

export interface EmailAddress extends IExpirable, IIdentity, ISynchronizable {
    Address: string | null;
    EmailAddressType: 'PrimaryWork'|'AlternativeWork'|'Personal'|'AlternativePersonal'|'BenefitsHelp'|'Surge';
}

export interface LGEmployeeRole extends PersonRole {
    CreatedBy: Partial<Person> | null;
    CreatedById: number;
    DateLicensed: string | null;
    DateStartedProducing: string | null;
    Deductions: Array<Partial<Deduction>> | null;
    Department: Partial<Department> | null;
    DepartmentId: number | null;
    EmploymentType: 'PaidEmployee'|'UnpaidEmployee'|'Contractor';
    FTEs: Array<Partial<FullTimeEquivalent>> | null;
    JobRoles: Array<Partial<JobRole>> | null;
    LastModifiedBy: Partial<Person> | null;
    LastModifiedById: number | null;
    LGEmployeeRoleToCompanyAddresses: Array<Partial<LGEmployeeRoleToCompanyAddress>> | null;
    LGEmployeeRoleUltiProAccount: Partial<LGEmployeeRoleUltiProAccount> | null;
    Titles: Array<Partial<LGEmployeeRoleTitle>> | null;
}

export interface Group extends IIdentity, ISynchronizable {
    Description: string | null;
    Name: string | null;
}

export interface PersonLdapAccount extends IIdentity, ISynchronizable {
    Guid: string;
    Person: Partial<Person> | null;
    SamAccountName: string | null;
    Sid: string | null;
}

export interface Permission extends IIdentity, ISynchronizable, IExpirable {
    Application: Partial<App> | null;
    ApplicationId: number;
    Description: string | null;
    MemberAccessQueues: Array<Partial<Queue>> | null;
    Name: string | null;
    OutboundCallerIdNumberAccessGroups: Array<Partial<OutboundCallerIdNumberGroup>> | null;
    OutboundCallerIdNumberAdminGroups: Array<Partial<OutboundCallerIdNumberGroup>> | null;
    PermissionToPeopleGroups: Array<Partial<PermissionToPeopleGroup>> | null;
    PermissionToPermissionGroups: Array<Partial<PermissionToPermissionGroup>> | null;
    PersonToPermissions: Array<Partial<PersonToPermission>> | null;
    Scope: Partial<Scope> | null;
    ScopeId: number | null;
}

export interface PermissionGroup extends Group, IExpirable {
    PeopleGroupToPermissionGroups: Array<Partial<PeopleGroupToPermissionGroup>> | null;
    PermissionToPermissionGroups: Array<Partial<PermissionToPermissionGroup>> | null;
    PersonToPermissionGroups: Array<Partial<PersonToPermissionGroup>> | null;
}

export interface Person extends IIdentity, ISynchronizable {
    Addresses: Array<Partial<PersonAddress>> | null;
    AdpAccount: Partial<PersonAdpAccount> | null;
    Attachments: Array<Partial<Attachment>> | null;
    Biography: string | null;
    CampaignToCrmAccounts: Array<Partial<CampaignToCrmAccount>> | null;
    CampaignToPeople: Array<Partial<CampaignToPerson>> | null;
    Comments: Array<Partial<Comment>> | null;
    CourseAdmins: Array<Partial<CourseAdmin>> | null;
    CourseMembers: Array<Partial<CourseMember>> | null;
    CourseParticipantStatuses: Array<Partial<CourseParticipantStatus>> | null;
    CourseReportees: Array<Partial<CourseReportee>> | null;
    CreatedAnswers: Array<Partial<EducationAnswer>> | null;
    CreatedCourses: Array<Partial<EducationCourse>> | null;
    CreatedFolders: Array<Partial<Folder>> | null;
    CreatedJobRoleTypes: Array<Partial<JobRoleType>> | null;
    CreatedLessons: Array<Partial<EducationLesson>> | null;
    CreatedOutboundCallerIdNumberGroups: Array<Partial<OutboundCallerIdNumberGroup>> | null;
    CreatedQuestions: Array<Partial<EducationQuestion>> | null;
    CreatedSurveyAnswers: Array<Partial<SurveyAnswer>> | null;
    CreatedSurveyQuestions: Array<Partial<SurveyQuestion>> | null;
    CreatedSurveys: Array<Partial<Survey>> | null;
    CReportComments: Array<Partial<CReportComment>> | null;
    CrmAccounts: Array<Partial<CrmAccount>> | null;
    CrmCommissions: Array<Partial<CrmCommission>> | null;
    DateOfBirth: string | null;
    DeletedAttachments: Array<Partial<Attachment>> | null;
    EloquaEmailTemplateToPeople: Array<Partial<EloquaEmailTemplateToPerson>> | null;
    EmailAddresses: Array<Partial<PersonEmailAddress>> | null;
    Extensions: Array<Partial<Extension>> | null;
    FirstName: string | null;
    ForumAdmins: Array<Partial<ForumAdmin>> | null;
    ForumJoinRequests: Array<Partial<ForumJoinRequest>> | null;
    ForumMembers: Array<Partial<ForumMember>> | null;
    ForumOptOuts: Array<Partial<ForumOptOut>> | null;
    ForumViews: Array<Partial<ForumView>> | null;
    Gender: string | null;
    HomeUserAnalytics: Array<Partial<HomeUserAnalytic>> | null;
    InAppNotifications: Array<Partial<InAppNotification>> | null;
    JobTitle: string | null;
    LastName: string | null;
    LdapAccount: Partial<PersonLdapAccount> | null;
    LessonParticipantStatuses: Array<Partial<LessonParticipantStatus>> | null;
    MessageNotifications: Array<Partial<MessageNotification>> | null;
    Messages: Array<Partial<Message>> | null;
    MiddleName: string | null;
    Names: Array<Partial<PersonName>> | null;
    NewsRecipients: Array<Partial<NewsRecipient>> | null;
    NotificationActivityLogs: Array<Partial<NotificationActivityLog>> | null;
    PersonToNotifications: Array<Partial<PersonToNotification>> | null;
    PersonToPeopleGroups: Array<Partial<PersonToPeopleGroup>> | null;
    PersonToPermissionGroups: Array<Partial<PersonToPermissionGroup>> | null;
    PersonToPermissions: Array<Partial<PersonToPermission>> | null;
    PersonToWebComponentSlides: Array<Partial<PersonToWebComponentSlide>> | null;
    PhoneNumbers: Array<Partial<PersonPhoneNumber>> | null;
    ProductionBudgets: Array<Partial<ProducerProductionBudget>> | null;
    QuickLinks: Array<Partial<QuickLink>> | null;
    Reactions: Array<Partial<Reaction>> | null;
    Replies: Array<Partial<Reply>> | null;
    Reservations: Array<Partial<Reservation>> | null;
    Roles: Array<Partial<PersonRole>> | null;
    SalesExpectations: Array<Partial<SalesExpectation>> | null;
    SessionSpeakers: Array<Partial<SessionSpeaker>> | null;
    SurveyAdmins: Array<Partial<SurveyAdmin>> | null;
    SurveyRespondents: Array<Partial<SurveyRespondent>> | null;
    SurveyRespondentStatuses: Array<Partial<SurveyRespondentStatus>> | null;
    SurveyResponses: Array<Partial<SurveyResponse>> | null;
    TrackableAttachmentToPeople: Array<Partial<TrackableAttachmentToPerson>> | null;
    UltiProAccounts: Array<Partial<PersonUltiProAccount>> | null;
}

export interface PersonEmailAddress extends EmailAddress {
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface PersonPhoneNumber extends PhoneNumber {
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface PersonRole extends Role {
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface PhoneNumber extends IPhoneNumber, IExpirable, IIdentity, ISynchronizable {
    PhoneNumberType: 'HrCompanyMain'|'HrCompanyFax'|'HrCompanyTax'|'HrCompanyOther'|'HrCompanyAddressMain'|'HrCompanyAddressFax'|'HrCompanyAddressModem'|'PrimaryWork'|'AlternativeWork'|'PrimaryHome'|'AlternativeHome'|'Mobile'|'Fax'|'BenefitsHelp'|'TheGameContact'|'SurgeContact';
}

export interface CompanyAddressUltiProAccount extends IIdentity, ISynchronizable {
    CompanyAddress: Partial<CompanyAddress> | null;
    LocCode: string | null;
    LocCodePlusCoId: string | null;
}

export interface CompanyUltiProAccount extends IIdentity, ISynchronizable {
    CmpCoId: string | null;
    CmpCompanyCode: string | null;
    CmpDefaultLocation: string | null;
    Company: Partial<Company> | null;
}

export interface LGEmployeeRoleUltiProAccount extends IIdentity, ISynchronizable {
    EmpNo: string | null;
    LGEmployeeRole: Partial<LGEmployeeRole> | null;
}

export interface ExtensionToQueue extends IIdentity, ICreatedBy {
    CreatedDate: string;
    Extension: Partial<Extension> | null;
    ExtensionId: number;
    Penalty: number;
    Queue: Partial<Queue> | null;
    QueueId: number;
}

export interface Queue extends IIdentity, ICreatedBy {
    CreatedDate: string;
    ExtensionToQueues: Array<Partial<ExtensionToQueue>> | null;
    Name: string | null;
    Number: string | null;
    QueueMemberManagerPermission: Partial<Permission> | null;
    QueueMemberManagerPermissionId: number | null;
    Server: Partial<Server> | null;
    ServerId: number;
}

export interface Extension extends IIdentity {
    Agent: number | null;
    ExtensionNumber: number;
    ExtensionToQueues: Array<Partial<ExtensionToQueue>> | null;
    Person: Partial<Person> | null;
    PersonId: number;
    Phone: Partial<Phone> | null;
    Server: Partial<Server> | null;
    ServerId: number;
}

export interface OutboundCallerIdNumber {
    CreatedDate: string;
    CreatorPerson: Partial<Person> | null;
    CreatorPersonId: number;
    Id: number;
    Name: string | null;
    Number: string | null;
    OutboundCallerIdNumberGroup: Partial<OutboundCallerIdNumberGroup> | null;
    OutboundCallerIdNumberGroupId: number;
}

export interface OutboundCallerIdNumberGroup extends ICreatedBy {
    CreatedDate: string;
    GroupAccessPermission: Partial<Permission> | null;
    GroupAccessPermissionId: number | null;
    GroupAdminPermission: Partial<Permission> | null;
    GroupAdminPermissionId: number | null;
    Id: number;
    Name: string | null;
    Numbers: Array<Partial<OutboundCallerIdNumber>> | null;
}

export interface Phone {
    Admin: string | null;
    Extension: Partial<Extension> | null;
    Id: number;
    Manufacturer: string | null;
    Model: string | null;
    Nickname: string | null;
    Password: string | null;
    Protocol: string | null;
    StaticIp: string | null;
}

export interface Server extends IIdentity {
    AmiIp: string | null;
    AmiPassword: string | null;
    AmiPort: number | null;
    AmiUserName: string | null;
    Extensions: Array<Partial<Extension>> | null;
    Ip: string | null;
    Name: string | null;
    OutgoingOrginateVariables: string | null;
    OutgoingPrefix: number | null;
    Queues: Array<Partial<Queue>> | null;
    Version: Partial<number>;
}

export interface UsageStatistic extends IIdentity {
    ApplicationNameAndVersion: string | null;
    CommandLine: string | null;
    Is64BitOperatingSystem: boolean;
    Is64BitProcess: boolean;
    LastReported: string;
    MachineId: string | null;
    MachineName: string | null;
    OsVersion: string | null;
    ProcessorCount: number;
    TotalCalls: number;
    UserDomainName: string | null;
    Version: string | null;
    WorkingSet: number;
}

export interface CourseReporteeToPeopleGroup extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
}

export interface CourseReportee extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface EducationAnswerKey extends IIdentity {
    Answer: Partial<EducationAnswer> | null;
    IsCorrect: boolean;
}

export interface EducationAnswer extends IChangeTracking, ICreatedBy, IIdentity {
    AnswerKey: Partial<EducationAnswerKey> | null;
    CreatedDate: string;
    Question: Partial<EducationQuestion> | null;
    QuestionId: number;
    Sequence: number;
    Text: string | null;
}

export interface CourseCategory extends IIdentity {
    Courses: Array<Partial<EducationCourse>> | null;
    Name: string | null;
}

export interface EducationCourse extends IIdentity, IChangeTracking, ICreatedBy {
    Category: Partial<CourseCategory> | null;
    CategoryId: number | null;
    CompletionCertificate: Partial<CourseCertificateAttachment> | null;
    CompletionCertificateId: number | null;
    CourseAdminPeopleGroups: Array<Partial<CourseAdminPeopleGroup>> | null;
    CourseAdmins: Array<Partial<CourseAdmin>> | null;
    CourseMemberPeopleGroups: Array<Partial<CourseMemberPeopleGroup>> | null;
    CourseMembers: Array<Partial<CourseMember>> | null;
    CourseParticipantStatuses: Array<Partial<CourseParticipantStatus>> | null;
    CourseReportees: Array<Partial<CourseReportee>> | null;
    CourseReporteeToPeopleGroups: Array<Partial<CourseReporteeToPeopleGroup>> | null;
    CreatedDate: string;
    Description: string | null;
    FeaturedImage: Partial<CourseFeaturedImageAttachment> | null;
    FeaturedImageId: number | null;
    Lessons: Array<Partial<EducationLesson>> | null;
    Reviewable: boolean;
    Sequence: number;
    ShortDescription: string | null;
    Title: string | null;
}

export interface CourseAdmin extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface CourseAdminPeopleGroup extends IExpirable, IIdentity, IChangeTracking, ICreatedBy {
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
}

export interface CourseMember extends IIdentity {
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    IsRequired: boolean;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface CourseMemberPeopleGroup extends IIdentity {
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    IsRequired: boolean;
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
}

export interface CourseParticipantStatus extends IIdentity {
    CompletedDate: string | null;
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    IsCompleted: boolean;
    PercentageComplete: number;
    Person: Partial<Person> | null;
    PersonId: number;
}

export interface CourseCertificateAttachment extends Attachment {
    EducationCourses: Array<Partial<EducationCourse>> | null;
    FolderName: string | null;
    StorageFileNameAndPath: string | null;
}

export interface CourseFeaturedImageAttachment extends Attachment {
    EducationCourses: Array<Partial<EducationCourse>> | null;
    FolderName: string | null;
    StorageFileNameAndPath: string | null;
}

export interface LessonAttachment extends Attachment {
    FolderName: string | null;
    Lesson: Partial<EducationLesson> | null;
    LessonId: number;
    StorageFileNameAndPath: string | null;
}

export interface EducationLesson extends IIdentity, IChangeTracking, ICreatedBy {
    Attachments: Array<Partial<LessonAttachment>> | null;
    Course: Partial<EducationCourse> | null;
    CourseId: number;
    LessonParticipantStatuses: Array<Partial<LessonParticipantStatus>> | null;
    Name: string | null;
    PassingPercentage: number;
    Questions: Array<Partial<EducationQuestion>> | null;
    Sequence: number;
    VideoLength: string | null;
    YoutubeVideoKey: string | null;
}

export interface LessonParticipantStatus extends IIdentity {
    ActivityDate: string;
    Attempts: number;
    AttemptStatus: 'Pass'|'Fail'|'InProgress';
    GradePercentage: number;
    Lesson: Partial<EducationLesson> | null;
    LessonId: number;
    Person: Partial<Person> | null;
    PersonId: number;
    TimeToFail: string | null;
    TimeToPass: string | null;
    TimeWatched: string | null;
}

export interface EducationQuestion extends IChangeTracking, ICreatedBy, IIdentity {
    Answers: Array<Partial<EducationAnswer>> | null;
    CreatedDate: string;
    Lesson: Partial<EducationLesson> | null;
    LessonId: number;
    Sequence: number;
    Text: string | null;
    Type: 'SingleSelect'|'MultiSelect';
}

export interface DomoDataSet extends IIdentity {
    DataSetId: string | null;
    IsLgManaged: boolean;
    LgManagedLastModified: string | null;
    Name: string | null;
}

export interface LGManagedDomoDataset extends IIdentity {
    DomoDatasetId: string | null;
}

export interface Conference {
    EndDate: string | null;
    Events: Array<Partial<ConferenceEvent>> | null;
    Id: number;
    IsExpired: boolean;
    Packages: Array<Partial<ConferencePackage>> | null;
    RegistrationBegins: string | null;
    RegistrationEnds: string | null;
    Timeslots: Array<Partial<ConferenceTimeslot>> | null;
    Title: string | null;
    Tracks: Array<Partial<ConferenceTrack>> | null;
    Year: number;
}

export interface ConferenceActivity extends ConferenceEvent {
    AllowMultipleOptionSelection: boolean;
    AttendeePreference: string | null;
    Location: string | null;
    MoreDetailsText: string | null;
    MoreDetailsURL: string | null;
    Options: Array<Partial<ConferenceActivityOption>> | null;
}

export interface ConferenceActivityOption {
    Activity: Partial<ConferenceActivity> | null;
    ActivityId: number;
    Cost: Partial<number>;
    Enrollments: Array<Partial<ConferenceActivityOptionToAttendee>> | null;
    Id: number;
    Name: string | null;
}

export interface ConferenceActivityOptionToAttendee {
    ActivityOption: Partial<ConferenceActivityOption> | null;
    ActivityOptionId: number;
    Attendee: Partial<ConferenceAttendeePersonRole> | null;
    AttendeeId: number;
    EnrollmentDate: string;
    Id: number;
}

export interface ConferenceAccountPersonRole extends PersonRole {
}

export interface ConferenceAttendeePersonRole extends PersonRole {
    ActivityOptions: Array<Partial<ConferenceActivityOptionToAttendee>> | null;
    Conference: Partial<Conference> | null;
    ConferenceId: number;
    Events: Array<Partial<ConferenceEventToAttendee>> | null;
    MealPreference: 'NoPreference'|'Vegetarian'|'Kosher'|'Vegan'|'Pollotarian'|'Pescatarian'|'GlutenFree';
    Meals: Array<Partial<ConferenceMealToAttendee>> | null;
    Packages: Array<Partial<ConferencePackageToAttendee>> | null;
    Payments: Array<Partial<ConferencePayment>> | null;
    RegisteredBy: Partial<Person> | null;
    RegisteredById: number | null;
    RegistrationDate: string;
    Sessions: Array<Partial<ConferenceSessionToAttendee>> | null;
}

export interface ConferenceEvent {
    Conference: Partial<Conference> | null;
    ConferenceId: number;
    Description: string | null;
    Id: number;
    MaxAttendees: number | null;
    Name: string | null;
    Timeslot: Partial<ConferenceTimeslot> | null;
    TimeslotId: number;
}

export interface ConferenceEventToAttendee {
    Attendee: Partial<ConferenceAttendeePersonRole> | null;
    AttendeeId: number;
    EnrollmentDate: string;
    Event: Partial<ConferenceEvent> | null;
    EventId: number;
    Id: number;
}

export interface ConferenceMeal extends ConferenceEvent {
    Cost: Partial<number>;
    Enrollments: Array<Partial<ConferenceMealToAttendee>> | null;
    Location: string | null;
}

export interface ConferenceMealToAttendee {
    Attendee: Partial<ConferenceAttendeePersonRole> | null;
    AttendeeId: number;
    EnrollmentDate: string;
    Id: number;
    Meal: Partial<ConferenceMeal> | null;
    MealId: number;
}

export interface ConferencePackage {
    Attendees: Array<Partial<ConferencePackageToAttendee>> | null;
    Conference: Partial<Conference> | null;
    ConferenceId: number;
    Cost: Partial<number>;
    Description: string | null;
    Id: number;
    Name: string | null;
}

export interface ConferencePackageToAttendee {
    Attendee: Partial<ConferenceAttendeePersonRole> | null;
    AttendeeId: number;
    Id: number;
    Package: Partial<ConferencePackage> | null;
    PackageId: number;
}

export interface ConferencePayment {
    Amount: Partial<number>;
    Attendee: Partial<ConferenceAttendeePersonRole> | null;
    AttendeeId: number;
    Date: string;
    EnteredBy: Partial<Person> | null;
    EnteredById: number;
    Id: number;
    PaymentType: 'CreditCard'|'Check'|'Comp'|'Cash'|'Refund';
    TransactionId: string | null;
}

export interface ConferenceSession extends ConferenceEvent {
    Enrollments: Array<Partial<ConferenceSessionToAttendee>> | null;
    IsRegistrationRequired: boolean;
    RoomNumber: string | null;
    Speakers: Array<Partial<SessionSpeaker>> | null;
    Track: Partial<ConferenceTrack> | null;
    TrackId: number | null;
}

export interface ConferenceSessionToAttendee {
    Attendee: Partial<ConferenceAttendeePersonRole> | null;
    AttendeeId: number;
    EnrollmentDate: string;
    Id: number;
    Session: Partial<ConferenceSession> | null;
    SessionId: number;
}

export interface ConferenceTimeslot {
    Conference: Partial<Conference> | null;
    ConferenceId: number;
    EndDate: string;
    Events: Array<Partial<ConferenceEvent>> | null;
    Id: number;
    StartDate: string;
}

export interface ConferenceTrack {
    Conference: Partial<Conference> | null;
    ConferenceId: number;
    Id: number;
    Name: string | null;
    Sessions: Array<Partial<ConferenceSession>> | null;
}

export interface ConferenceUserPersonRole extends PersonRole {
}

export interface SessionSpeaker {
    Id: number;
    Person: Partial<Person> | null;
    PersonId: number;
    Session: Partial<ConferenceSession> | null;
    SessionId: number;
}

export interface PeopleGroupToWebComponentSlide extends IIdentity {
    PeopleGroup: Partial<PeopleGroup> | null;
    PeopleGroupId: number;
    WebComponentSlide: Partial<WebComponentSlide> | null;
    WebComponentSlideId: number;
}

export interface PersonToWebComponentSlide extends IIdentity {
    Person: Partial<Person> | null;
    PersonId: number;
    WebComponentSlide: Partial<WebComponentSlide> | null;
    WebComponentSlideId: number;
}

export interface WebComponentSlide extends Slide {
    Path: string | null;
    PeopleGroupToWebComponentSlides: Array<Partial<PeopleGroupToWebComponentSlide>> | null;
    PersonToWebComponentSlides: Array<Partial<PersonToWebComponentSlide>> | null;
    Tag: string | null;
}

export interface VideoSlide extends Slide {
    AdditionalDuration: string;
    YoutubeVideoKey: string | null;
}

export interface ImageSlide extends Slide {
    Image: Partial<SlideImageAttachment> | null;
    ImageId: number | null;
}

export interface SlideImageAttachment extends Attachment {
    FolderName: string | null;
    ImageSlides: Array<Partial<ImageSlide>> | null;
    StorageFileNameAndPath: string | null;
}

export interface Tv extends IIdentity {
    Description: string | null;
    Hostname: string | null;
    IPAddress: string | null;
    Name: string | null;
    TvGroup: Partial<TvGroup> | null;
    TvGroupId: number | null;
}

export interface TvGroup extends IIdentity {
    Host: string | null;
    Name: string | null;
    SlideShow: Partial<SlideShow> | null;
    SlideShowId: number | null;
    SubnetMask: string | null;
    Tvs: Array<Partial<Tv>> | null;
}

export interface Slide extends IIdentity {
    Background: string | null;
    Duration: string;
    MakeFullscreen: boolean | null;
    Name: string | null;
    SlideShowToSlides: Array<Partial<SlideShowToSlide>> | null;
}

export interface SlideShowToSlide extends IIdentity {
    Duration: string;
    Sequence: number;
    Slide: Partial<Slide> | null;
    SlideId: number;
    SlideShow: Partial<SlideShow> | null;
    SlideShowId: number;
}

export interface SlideShow extends IIdentity {
    Name: string | null;
    SlideShowToSlides: Array<Partial<SlideShowToSlide>> | null;
    TvGroups: Array<Partial<TvGroup>> | null;
}

export interface AppsPcCarrier extends IIdentity {
    LineOfBusiness: string | null;
    Name: string | null;
    Territory: string | null;
}

export interface AppsWorkerCompCarrier {
    Id: number;
    LineOfBusiness: string | null;
    Name: string | null;
    Territory: string | null;
}

export interface AffiliationRole extends CompanyRole, ICreatedBy {
    AffiliationRoleNotifications: Array<Partial<AffiliationRoleNotification>> | null;
    AgencyPartner: Partial<JobRole> | null;
    AgencyPartnerId: number;
    Controller: Partial<JobRole> | null;
    ControllerId: number;
    Description: string | null;
    Documents: Array<Partial<AffiliationRoleAttachment>> | null;
    EffectiveDates: Array<Partial<AffiliationRoleEffectiveDate>> | null;
    IsDeveloperEntry: boolean;
    NumberOfYearsOnEarnOut: number;
    Reviews: Array<Partial<AffiliationRoleReview>> | null;
    State: 'Active'|'Inactive';
}

export interface AffiliationRoleNotification extends Notification {
    AffiliationRole: Partial<AffiliationRole> | null;
    AffiliationRoleId: number;
}

export interface AffiliationRoleReview extends IExpirable, IIdentity {
    AffiliationRole: Partial<AffiliationRole> | null;
    AffiliationRoleId: number;
    PaymentDate: string;
    ReviewDate: string;
}

export interface AffiliationRoleEffectiveDate extends IExpirable, IIdentity {
    AffiliationRole: Partial<AffiliationRole> | null;
    AffiliationRoleId: number;
    EffectiveDate: string;
}

export interface AffiliationRoleAttachment extends Attachment, IExpirable {
    AffiliationRole: Partial<AffiliationRole> | null;
    AffiliationRoleId: number;
    FolderName: string | null;
    Length: number;
    StorageFileNameAndPath: string | null;
}

export interface AffiliationContactPersonRole extends PersonRole {
}

export interface FiscalPeriod extends IIdentity, IExpirable {
    AgencyRole: Partial<AgencyRole> | null;
    AgencyRoleId: number;
    MonthOffset: number;
}

export interface ProducerCodeName extends IIdentity, IExpirable {
    Name: string | null;
    ProducerCodeType: Partial<ProducerCodeType> | null;
    ProducerCodeTypeId: number;
}

export interface ProducerCodeType extends IIdentity {
    Names: Array<Partial<ProducerCodeName>> | null;
}

export interface SupplementalProducerCode extends IIdentity, IExpirable {
    Ams360FullName: string | null;
    Empcode: string | null;
    ManagementSystem: Partial<ManagementSystem> | null;
    ManagementSystemId: number;
    Person: Partial<Person> | null;
    PersonId: number | null;
    ProducerCodeType: Partial<ProducerCodeType> | null;
    ProducerCodeTypeId: number | null;
}

export interface BookOfBusinessChange extends IIdentity {
    Amount: Partial<number>;
    Company: Partial<Company> | null;
    CompanyId: number;
    Description: string | null;
    EffectiveDate: string;
}

export interface StandardizedLineOfBusiness extends IIdentity {
    LineOfBusinessCategory: string | null;
    LineOfBusinessName: string | null;
}

export interface StandardizedGLDepartment extends IIdentity {
    CleanName: string | null;
    Name: string | null;
}

export interface StandardChartOfAccount extends IIdentity {
    GLNumber: number;
    Tier1Description: string | null;
    Tier2Description: string | null;
    Tier3Description: string | null;
    Tier4Description: string | null;
}

export interface IExpirable {
    EndDate: string | null;
    IsExpired: boolean;
    StartDate: string;
}

export interface ISynchronizable {
    CreatedDate: string;
    LastModifiedDate: string;
}

export interface IPhoneNumber {
    AreaCode: string | null;
    CountryCode: string | null;
    Extension: string | null;
    LineNumber: string | null;
}

